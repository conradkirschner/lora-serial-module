{"version":3,"sources":["../node_modules/base64-js/index.js","../node_modules/ieee754/index.js","../node_modules/isarray/index.js","../node_modules/node-libs-browser/node_modules/buffer/index.js","../node_modules/buffer/index.js","../src/client/packages/types.js","../src/client/packages/RREP.js","../src/client/packages/RREQ.js","../src/client/packages/RERR.js","../src/client/packages/RREP-ACK.js","../src/client/packages/SEND-TEXT-REQUEST.js","../src/client/packages/SEND-HOP-ACK.js","../src/client/packages/SEND-TEXT-REQUEST-ACK.js","../src/client/packages/index.js","js/errorModal.js","js/createSerialConsole.js","../src/client/commands/lora.js","js/addEvents.js","js/index.js"],"names":["RREQ","RREP","RERR","RREP_ACK","SEND_TEXT_REQUEST","SEND_HOP_ACK","SEND_TEXT_REQUEST_ACK","getType","byteArray","currentBufferInt","Buffer","from","readUInt8","create","hopCount","originAddress","destinationAddress","destinationSequenceNumber","lifetime","read","uflag","rreq_id","originSequenceNumber","parseInt","destinationCount","unreachableDestinationAddress","unreachableDestinationSequenceNumber","additionalAddresses","additionalSequenceNumber","messageSequenceNumber","payload","bytesPayload","concat","message","toString","converToAscii","String","fromCharCode","bytearray","messageNumber","send","rrep_ack","createRREP_ACK","rerr","createRERR","rreq","createRREQ","rrep","createRREP","send_hop_ack","createSEND_HOP_ACK","send_text_request","createSEND_TEXT_REQUEST","send_text_request_ack","createSEND_TEXT_REQUEST_ACK","readRREP_ACK","readRERR","readRREQ","readRREP","readSEND_HOP_ACK","readSEND_TEXT_REQUEST","readSEND_TEXT_REQUEST_ACK","showError","errorMessage","isModalShown","modal","document","createElement","classList","add","closeError","innerHTML","remove","text","closeButton","style","position","top","right","margin","fontSize","borderBottom","addEventListener","innerText","appendChild","body","makeid","length","result","characters","charactersLength","i","charAt","Math","floor","random","formattedTimestamp","currentdate","Date","getHours","getMinutes","getSeconds","formatBinaryInput","sended","showText","Uint8Array","charCodeAt","e","substring","createSerialConsole","renderInto","connectToDeviceId","attachEvents","id","serialConsole","terminalIcon","setTimeout","connection","WebSocket","log","deviceId","undefined","isReadOnly","blacklist","lan","zIndex","shouldFollow","isFullLog","timeout","closeWindow","$windowCloseButton","querySelector","getQuerySelector","$header","$log","$logContainer","$deviceId","$readonlyLabel","$blacklist","$lanContainer","$fullLogToggleButton","$sendCommandButton","$sendCommandButtonInput","$followLogToggle","$serialConsoleContainer","$logRouteRequest","$logRouteReply","$logRouteReplyAck","$logRouteError","$logSendText","$logSendTextAck","$logSendHopAck","addTableEntry","sender","type","isOwn","payloadObject","row","packages","$showNewRouteRequest","$showNewRouteReplyAck","$showNewRouteReply","$showNewRouteError","$showNewHopAcknowledge","$showNewTextRequest","$showNewTextRequestAck","$showManageReceiving","$showLoraConfig","$newRouteRequest","$newRouteReplyAck","$newRouteReply","$newRouteError","$newHopAcknowledge","$newTextRequest","$newTextRequestAck","$manageReceiving","$loraConfig","$container","$menu","$menuButtons","elements","close","moveToTop","window","zIndexHandler","windowFollowMouse","event","deltaX","movementX","deltaY","movementY","rect","getBoundingClientRect","left","x","y","showNewRouteRequest","contains","showNewRouteReplyAck","showNewRouteReply","showNewRouteError","showNewHopAcknowledge","showNewTextRequest","showNewTextRequestAck","showManageReciving","showLoraConfig","once","toggleFullLog","oneTimeFlag","toggleFollowLog","toggled","checked","setReadOnly","setAttribute","forEach","element","querySelectorAll","getReadOnlyStatus","setReadOnlySendedRequest","newLogEntry","_appendLogFormatted","slice","setBlacklist","newBlacklist","blackListBoxes","indexOf","blackListId","target","index","push","removedItem","splice","join","getBlacklist","setLan","value","getLan","setDeviceId","newDeviceId","getDeviceId","createLogEntryTemplate","followLogAction","scrollTo","scrollWidth","scrollHeight","appendLog","data","logentry","split","LRorAT","size","payloadData","payloadDataWithoutType","binaryAsJson","padStart","JSON","stringify","pushToLog","onopen","onerror","error","console","onmessage","clearTimeout","startsWith","parse","sendCommand","command","sendMessage","messageWithoutType","formattedLogEntry","serialConsoleIds","currentConsole","actions","resetModule","setAddress","address","setDestination","setBroadcast","getStatsFromLastMessage","setConfig","rfFrequency","power","bandwidth","spreadingFactor","errorCoding","crc","implicitHeader","rxSingleOn","frequencyHopOn","hopPeriod","rxPacketTimeout","payloadLength","preambleLength","getMessages","sendText","retryCounter","currentSerialConsole","inputs","messagePackage","commands","sendBinaryPackage","require","name","$spawnButton","getElementById","$spawnButtonInput","main","getElementsByTagName","serialConsoleId"],"mappings":"AAAA,ACAA,ACAA;AFCA,AIDA,AHCA,ACAA;AFCA,AIDA,AHCA,ACAA,ACFA;AHGA,AIDA,AHCA,ACAA,ACFA,AeGA;AlBAA,AIDA,AHCA,ACAA,ACFA;AHGA,AIDA,AHCA,ACAA,ACFA,AeEA;AlBCA,AIDA,AHCA,AEFA;AHGA,AIDA,AHCA,AEFA,AaLA,AHAA,ARAO,AYAP,AHCO,AIDP,IbAaA,ASCA8D,ITDI,GAAG,CAAb,CSCe,GAAG,mBAACC,YAAD,EAAkB;AdO3C,AIDA,AHCA,AEFA,AMNA,AHAA,ACAA,AICA,ACAA,AFAA,AKDA,ADEI;AdOJ,AIDA,AHCA,AEFA,AKPA,AKCA,ARAO,AYAP,AHEI,ITFS9D,ESEL+D,ETFS,GAAG,CAAb,MSEa,GAAG,KAAnB;AdOJ,AIDA,AHCA,AEFA,AaLO,APDA,AHAA,ACAA,AICA,AIDP,ADEI,AIDJ,IFAakN,APDArQ,AHAAA,ACAAA,AICAA,AOAPH,EJCIuD,ILFS,AHAA,ACAA,AICA,AOAP,CJCG,ELFO,AHAA,ACAA,AICA,AOAP6O,CJCG5O,CEDM,GAAG,EEAL,CAAC,CTDVrD,AHAAA,ACAAA,AICAA,AGCa,CAACsD,IEDd+M,CPDS,AHAA,ACAA,AICA,CJAlB9P,AIAmBS,COAD,CTDM,AHAkF,AYC/F,CAAmBnB,EXDZ,EAElBI,AOAc,CAAuB,CEDd,AEA3B,GFAiC,CFCf,CAAd,CPFkB,EAGlBO,IIFkB,EAA2B,CJD3B,EAIlBN,aAJkB,EAKlBO,oBALkB,EAMlBN,kBANkB,EAOlBC,yBAPkB,EAQjB;APCL,AIDA,AHCA,AEFA,AaLG,ARFI,ACCH,AHD0G,ACS1G,AIPA,AEFJ,ARAO,AYAP,AHGIgD,EAAAA,ENHSpD,AHAAX,ECAUY,CQGd,CTHQ,ASGPsD,CLFC1D,AFQAA,AIPAA,CHFQ,CHAC,CAAb,CGAe,CFAwF,CGC7F,AFQA,AIPA,CFDCC,AFQAA,AIPAA,CGCd,CAAgB0D,ELFT,AFQA,AIPA,CFDY,AFQA,AIPA,AGCnB,CNHSxD,ACCWV,AFShBH,AIRgBK,AGCA,MNHF,CAAEmB,IDSD,EAEdJ,EEVc,CAAZ,CAAP,CFUI,CITe,EJSLA,AIToBS,AGClC,ENHkB,EAAoBJ,CDWlC,GAAkB,CAFH,EAGfX,QAHe,EAIfO,AIXe,CAAZ,CAAP,KJOmB,EAKfN,GCdc,EAAmDW,OFAzC,CAA8E,ACSvF,EAMfJ,oBANe,EAOfN,IChBc,EAAyFW,YDSxF,EAQfV,KCjBc,EAA8GW,kBDS7G,CAAZ,CAAP,ICTkB,EAA2I;ARUjK,AIDA,AHCA,AEFA,AaLC,ARFG,ACCH,AHF6G,ACmB7G,AIhBA,AIFD,AGIA,CFJO,APDA,AFAA,AICA,KLD4Bb,GECxBL,MAAM,CAACC,GFD4F,CECnG,CAAY,CAACT,WAAD,EAAOsB,gBAAP,EAAyBC,6BAAzB,EAAwDC,oCAAxD,EAA8FC,mBAA9F,EAAmHC,wBAAnH,CAAZ,CAAP;ARUJ,AIDA,AHCA,AEFA,AKPC,AFF6G,AOC9G,ARAO,ASGH,CNJG,GHCMzB,ECDqCa,AQIxCsD,MTHW,GAAG,CAAjB,ASGa,GAAG,KRJuF,IQIpGA,UAAa,GAAM;AdQ7B,AIDA,AHCA,AEFA,AGV8G,ASE9G,ADGQL,IAAAA,ERL8DhD,GQKzD,CAACsD,SAAN,GAAkB,EAAlB,ORLsG;ANa9G,AIDA,AHCA,AEFA,AGX8G,AOE9G,ARAO,ASICN,ITJK7D,ASIL6D,ERNyF/C,GQMpF,CAACsD,IRNgG,EQMtG,KTJsB,GAAG,CAA1B;ALYP,AIDA,AHCA,AEFA,AaRO,APDA,AHFH,ACmBG,AIhBA,AGGF,GAHD,CEAS2M,APDAhQ,AFiBAA,AIhBAA,IFDI,AFiBA,AIhBA,CLHNT,EGES,AFiBA,AIhBA,GKAG,CVHN,CAACC,CUGS,GPDdQ,AHFF,ACmBEA,AIhBAA,CLHU,CAAClB,EGEJ,AFiBA,AIhBA,CJgBCO,AIhBA8B,CKAR6O,CPDa,MHFH,CCmBH,AIhBA,CLHUrQ,CUGH,ATgBQ,AIhBA,CKAPsQ,MVHL,CUGI,CVHarQ,CUGA,YVHjB,EAAgCC,kBAAhC,EAAoDC,yBAApD,EAA+EC,QAA/E,CAAZ,CAAP;ANcJ,AIDA,AHCA,AEFA,AaRI,ARDG,ACAH,AHFH,ACmBG,AIhBA,AEFJ,ARAO,CCHA,GDGMb,KGCGc,ACAL,AFiBA,AIhBA,IHDJ,ACAH,CDAiBX,EHDI,GAAG,CAArB,GGCA,EAAyB,EQCV4Q,OAAlB;AhBWJ,AIDA,AHCA,AEFA,AaRC,ARDG,ACAH,AFiBOhQ,AIhBAS,AGEJ,AIGJ0J,CFPO,APDA,GFmBCnK,AIhBAS,EGEEiC,AIGJ,CAACsE,EVNI,ADiBE,EAAE5H,IOdI,GAAG,EPcE,CAAC,CAAD,CADb,AWVX,EPL6B,COKH,CPLK8B,AGErBwB,SHF8B,AGElB,AIGKmD,CPLc,AGElBlD,CHFiB,AOKd,EAAKgP,IAAL,EAAc,GJHlB,EAAkB;AdSxC,AIDA,AHCA,AEFA,AKTQvR,ADiBAV,AIlBG,AEDX,ARAO,AYFA,AHOCmD,AIGJ,GPPA,CHCIzC,ADiBAV,AFnBKR,AYFA0G,AHOL/C,KAAK,CAACM,EPcE,EAAE/D,EUrBO,GAAG,AHOpB,CNHgB,AUMTyG,EVNWzG,AMGD,AIGrB,CXWuB,CAAC,AOdpB,CPcmB,AFnBO,CEiBvB,EFjB0B,AYFxBwG,CZEN,EGE4B,CAAC,CAAD,CADxB,MSHiB,CAACC,EAAD,EAA2B,ECUxB8L,IAA3B;AlBMJ,AIDA,AHCA,AEFA,AKTQtR,ADiBAJ,AIhBP,ANFD,AYJuD,AHQ/C,AIGP,CPTM,AOOP,GVJQI,ADiBAJ,EUtByBmR,EHQnB/N,GPcC,COdG,CPcDjE,EOdI0D,GGRkC,IVsB7B,CAAC,AOdE,CPcH,AOdIC,CPWnB,QCd0B,EAAE3D,EMGlB,CAAuB,KAAvB,CNH2B,AMGxC,CNHyC,CAAD,CAFrC,0CSHqC,CAAO;AjBiBvD,AIDA,AHCA,AEFA,AKTQkB,AFLD,ACsBCX,AMnBD,AIHH,AHQI,AIGR,IVNQW,AFLKP,ACsBLJ,AMnBKyB,EIHH8F,EXAO,AOGA,ACKH5D,EGRA,CXAM,AOGA,EIHHR,IVsBI,EAAE3C,AOdE,CRRZJ,CWAY,CAACgH,AHQEjE,ERRR,CAAC1D,ECsBU,CAACA,EOdI,CAAC2D,GRRjB,CWAH,CXAkB,AWAKiE,CVsBC,CAAC,CAAD,CCjBG,ADiBb,CAJpB,CCbmC5H,EMGlB,CAAuB,KAAvB,CNH2B,AMG/C,CNHgD,ASLA,CTKD,ASLEyG,CTE9C,CSF6C,EAAI,KAAJ,CAAvC,CAAb;AjBiBJ,AIDA,AHCA,AEFA,AaVO,ARCCtF,AFLJ,ACsBIL,AKzBD,AFAA,AGMHmB,AIHA,AHQIiC,EDLJjC,EGCS4O,ARCL1P,ADiBAL,AKzBKT,AFAAA,AIWL6D,EGRE6D,GXAC,CMHQ,AFAA,AGMP,EAAE7F,CDNQ,AFAA,EIWH,CAACiC,EEJO,CCJJ,EDIQ,AFIvB,CFXK9D,AFAAA,AOGaqD,AHQAU,CNHC,CDiBC,CCjBCpE,CDiBCA,CMpBV,CDLE,AFAA,CEAEO,AFADA,CMOVsQ,ACJqB,AHQ1B,CGR2BlJ,EHQE,CNHC,CAAC,ADiBA,CCjBD,ADiBE,CCrB7B,ADqB4B,CAL5B,EOTH,EFXc,AFAA,EMOS,AJPQnH,AFADA,AOGZ,CDIMoQ,ACJiBhJ,ODIlB,EAAa,OCJqB,CLH3C,AFAA,AOG4CnB,ELHP1E,AFADV,AOGO,EAAI,WLH/C,EAAuD,EKGZ,CAAvC,CAAtB,EPHkB,EAA2DC,OAA3D,EAAuE;AVoB7F,AIDA,AHCA,AEFA,AaVI,ARCIF,AFLAd,ACsBAE,AKzBJ,AFAA,AGMA2B,AIHA,AHQI+B,EDLJ/B,ELEIf,AFLAd,ACsBAE,AOdA0D,EJXE3C,AGMF,AIHEyG,EJGA5F,CDNClC,GNGK,EAAEF,CMHD,AKGE,AHQA,CFXDG,AEWEgE,EJXE,AOGAT,ELHX,ACIS,CDJG,AFAExD,AIWjB,CPckB,AKzBFJ,AEWEuE,CRRC,CAAC,ACsBAtD,CDtBD,AQQnB,CRTG,AWCmB,CDIR6P,ANPS,AOGAjJ,CTKC,AERAxH,AIWA,ENHEH,CMG1B,CPc4B,AGzBX,CHyBYA,AGzBAsB,CMOjC,KRCuC,CAAC,AERnB,AOGH,CTKqB,AERvC,AOGyCsG,CVsBC,CAAC,CAAD,CAAV,CANzB,IKnBY,EAAwBrH,KKGc,CAACkG,EAAD,EAAK,GLH3C,EAAuCjG,MKGD,CAAvC,CAAlB,ULHmB,EAA2DuB,aAA3D,CAAZ,CAAP;AZoBJ,AIDA,AHCA,AEFA,AaVC,ARLU,AFCHxB,ACsBAE,AKzBP,AFAG,AGMA4B,AIHA,AHQI6B,CEND,AJPA,CCQH7B,CLJA,CFCI9B,ACsBAE,AOdAyD,EDLA,AIHE+D,EJGA3F,CHNCpC,MAAM,AIWE,CJXDsB,AIWE2C,CRRC,EAAEnE,COAH,AIAI,CHQhB,CJXG,AIWesE,CJXD,AOGEZ,CPHDxD,GIWlB,CRRwB,CAAC,ACsBA,CDtBD,AIHA,AIWE,CRVvB,ACwBwBF,AGzBFG,AOGE,CAACwH,CHQ5B,EJXkB,CAAY,CAAC/H,GHyBK,CAAC,CAAD,GUtBjB,CAAuBgI,ePHZ,COG4B,CPHR7G,AOGS0F,EAAD,EAAK,IPHL,CAAClG,WOGD,CAAvC,CPHuC,AOG9D,CPHkC,EAA6CQ,QAAQ,CAACP,kBAAD,CAArD,EAA2Ea,qBAA3E,CAAZ,CAAD,EAAiHE,YAAjH,CAAd,CAAP;AVoBJ,AIDA,AHCA,AEFA,AKTC,AFLOf,ACcG,AGjBV,AGMG+B,AIHA,AHQI2B,CJdD,CGSH3B,CNWA,CDdI/B,AQQA0D,EDLA,AIHEgE,EJGA1F,OCKS,CGRC,AHQA2B,GGRGT,CJDH,CCSZ,CRRkB,AQQAa,ERREvE,GWAG,CAAC2H,AHQxB,GAA2B,ERRE,CAAC,CAAD,CAH1B,CQWH,IGRe,CAAuBC,gBAAgB,CAACnB,EAAD,EAAK,WAAL,CAAvC,CAAnB;AjBiBJ,AIDA,AHCA,AEFA,AGdQhG,ACsBP,AMnBGgC,AIHA,AHQIyB,AICR,CXGO,CMTHzB,EPHIhC,AQQAyD,AICFsO,EDTIrK,QJGM,CCKG,CDLDzF,ACKEyB,AICF,GDTK,ACSFT,EJDb,CGRkBA,AHQAc,KICG,CAACiO,CZTG,CWAC,AHQ1B,CRR2BzS,AWAA2H,EHQE,CDVjB,KCUZ,CRRoC,CAAC,CAAD,AYSvB,CZbV,AYakC,CDTnB,CAAuBC,gBAAgB,CAACnB,CCS7C,CDT4C,ACSjE,EDTsE,QAAL,CAAvC,CAAtB;AjBiBJ,AIDA,AHCA,AEFA,AGdQ/F,AOGJiC,AIHA,AHQIuB,AICR,ELNIvB,EPHIjC,AQQAwD,AICFwO,EDTItK,MXAM,EAAEpI,CQQC,CAACmE,GDLC,EAAEvB,ACKf,AICe,CJDG6B,CRRC,CAAC,AYSFf,CZTC,CWAG,GAAGA,GCSC,CAAC+O,CJD3B,GGRiC,AHQA,CGRC9K,MJHtB,GKYM,CAAwB,GDTjB,CAAuBC,MHQhD,UGRgE,CAACnB,EAAD,EAAK,CCSnD,CAA1B,eDTwE,CAAvC,CAA7B;AjBiBJ,AIDA,AHCA,AEFA,AabO,AVPI,AMAJ,ACSH5D,ARFG,AYDH,AHQIqB,AICRsO,ELNI3P,CPTA,CUOSiO,AJPAnQ,APOAZ,ASOLmE,EGREmE,ELNO,GAAG,APOA,CaQR,CAAC3D,CbRU,CSOJ,CEPM,AFOLX,GEPS,CJPhBpD,GCSY,ARFZZ,COPO,AKMQ,CLNPC,ACSM8C,ACKnB,EGRuBY,CDClBoN,AFOmB,CIChC,CbRuB,AaQO,CbRN9Q,GOPJ,CKMmB,CLNJ,AKMK2H,CCSxC,EAAuC,CFRV,AXAN,EAAgB,CWAJ,MCDJ,CAAuBC,CCST,CJDrC,cGR8D,CAACnB,EAAD,EAAI,yBAAJ,CAAvC,CAA3B;AjBiBJ,AIDA,AHCA,AEFA,AabI,AVDH,AMNG,AFAG,AGCa,ARMhB,AYDA,AHQIvC,AICJ,CZjBG,AOGA,GHDMvD,AIcLuD,ETPEjE,AYDAqI,ACSAqK,ERfO,EQeH,CRfM,EQeHjP,EJDE,CAACgB,IJdP/D,CQeY,CbRC,AaQAiS,ERfN,CAAC5S,ALOQE,IYDI,EZCE,CAACC,AYDAuD,AHQ5B,CAA6B,CFd2B1D,AFA5C,EAAe,ALON,CAAYA,GYDG,AHQpC,CGRqC2H,CHQC,AIC7B,CNfb,AMe2C,GbRlB,EAAuBvH,CaQnC,EAAsC,CAAtC,CAAb,CDTgC,AHQgB,CGROwH,EZC9B,CAAiC,CAAjC,CAAzB,WYDuE,CAACnB,EAAD,EAAI,+BAAJ,CAAvC,CAAhC;AjBiBJ,AIDA,AHCA,AEFA,AabC,AJRG,AFCA,ALOA,AYDA,AFRJ,ADgBY3C,AICR,CFVG,KJNKvD,AKOFgI,AHQEzE,AICF+O,UJDY,GFflB,EMgBqB,CDTC,ECSE,CDTCnP,GPN4D1D,KOMpD,CAAC2H,GPNlC,UOMyB,CAAuBC,gBAAgB,CAACnB,EAAD,EAAI,CCSxBkM,IAApB,EAAyBD,YDTe,CAAvC,CAAzB,GCSkE,CAACvE,KAA3C,EAAkD3H,uBAAlD,CAAxB;AlBQJ,AIDA,AHCA,AEFA,AStBI,AFCA,AGSG,AIFH,AHQK,AICL+J,EAAAA,ELPS5P,CCIL,CFdmBH,AFCfD,AOOFkK,EJEO,GAAG,KIFA,ECSA,CRhBhB,AOOmB/G,ACSFmP,KNjBjB,GKQ2B,CAAClL,MCSI,CAAClB,EAAjB,CAAhB,GDTmB,ACSoBoM,CDTG,MAAKpM,EAA5B,CAAnB,KCSA;AlBQJ,AIDA,AHCA,AEFA,ASvBI,AFCA,AGUAxE,ARFA,ASQIgC,AICP,CAJD,CLHIhC,ECMIgC,EFjBuClC,AFCpBvB,ALQnBP,ESQI,CAAC0E,CDND,EAAE5B,MCMN,CFjBJ,EEiBqBQ,CTRD,EKRpB,CGSgB,ERDSrD,MAAM,ASQ3B,CTR4BC,IAAP,CAAY,CAACX,IAAD,CAAZ,EAAoBY,SAApB,CAA8B,CAA9B,CAAzB,EAA2D;ALiB/D,AIDA,AHCA,AEFA,AOvBI,AGWA+B,ARFI,AYAJ,AHQIsB,AICR,ELPItB,ECMIsB,EJjBuCpC,AGWvC,AIFA0J,EJEE/H,CCMG,CAAC4B,CTRC,CYAD,CAAC2L,IZAP,CQAY,GCQZ,CAAkBrM,KJjBtB,EOSI,CAAwBuC,EAAxB,CHQA,CGR4BgK,OAA5B,KAAwCxJ,SAA5C,EAAsD;AjBiB1D,AIDA,AHCA,AEFA,AafO,AJTH,AFAA,AGYA5E,ARFC,AYAGuE,AFRR,ADgBQnD,EDNJpB,EGHS0O,ACCLnK,AHQAnD,EJlBiElC,AGYjE,EAAE0B,CDZC,AGEF6B,ADgBI,CAACF,IGRI,CAAC,AFRnB,CAAgBG,ELFZ,AGSgB,GCSZ,CChBR,ADgB0Bd,EChBF,EDgBhB,CET4B,ACCZ,GDDgB,SAA3B8M,uBAA2B,GAAM;AhBkB9C,AIDA,AHCA,AEFA,AafI,AJTIxQ,ACYJgC,AIFQ,AFRR,ADgBImB,EDNJnB,EDZIhC,AEkBAmD,EDNA,AEVAsB,EFUE9B,EIFM,EFRF,ADgBE,CAAC2B,CGRGmN,CFRO,EHFN,AGEjB,ADgBI,CDVY,ACUEpN,CFlBdrE,OKUI,EAAsB,CHQ1B,CAA0BkD,EFnBvB,GEmBH;AdSR,AIDA,AHCA,AEFA,AafC,AJVsBjD,AFCnB,AGYAiC,ARHA,AYCY,AFRZ,ADgBC,CEXE,CHKHA,CGFJ,AFVI,CFDmBjC,EPUfP,AUPAgF,GLFG,KGYK,EAAE9B,AEVA,GAAS,GHHc,APUjB,EOVD3C,GPUMN,KQFT,CREe,CAACC,CYCV,GZDG,CAAY,CAACV,EOX/B,EPW8B,CAAZ,EAAoBW,SAApB,CAA8B,CAA9B,CAAzB,EAA2D,CYC/C,WFRZ;AfyBJ,AIDA,AHCA,AEFA,AS1B2C2B,AFEnCxB,AGYJoC,ARHI,AYCQ,AFRZ,AGgBJoI,ELNIpI,EDduCZ,AFEnCxB,EKEA2E,AGgBF,CAACqL,IbTQ,MOXyC,AFEnC,ALSb,EOXmCxO,AFEnCxB,AGYa,EAAE6C,CEVC,CGgBxB,EHhB2B6B,CGgBD,EAA1B,IRnBW,GKG0B,CAACF,MFIlB,AEJhB;AfyBJ,AIDA,AHCA,AEFA,AS5BW,AFIHvE,AGYJqC,ARHC,AYCQ,AHOTS,AICJI,ELNIb,ACKAS,CFrBA,CFII9C,IQkBA,CAACkE,EJDI,CAACnB,UJjBY,CGYD,CHZjB/C,AIiBK,CDLc6C,ACKvB,AICJ,CAA0B,gBRpBf,EQoBX,EAA8C,UAAS6H,KAAT,EAAgB;AlBS9D,AIDA,AHCA,AEFA,AS1BC,AFEO7J,AGIY,AEHhB,ADgBH,AICG,CNzBG,ACWA,AChBA,GJYCA,EQkBEsR,CHjBA,GGiBI,CHjBAxN,CAAC,CGiBEzB,EHjBC,CAAd,EAAiByB,CAAC,EGiBG,CHjBAJ,AGiBC6N,GRlBG,EAArBvR,CKCJ,EAA6B8D,CAAC,EAA9B,EAAmC,OGiBtB,CAA8B,KRrBpC,CQqBM,EAAsC,CAAtC,CAAb;AlBSJ,AIDA,AHCA,AEFA,AOxBQ1D,ALQJ,AYCQ+E,AFRJxB,AGiBJ,IRlBIvD,AKCAuD,EVOA/E,AYCIuG,ACSFqM,IHjBI,CLDC,EAAE3S,CKCC+E,IEQM,CPTD,AOSEwB,CPTDtG,COSA,ACSC,CbVD,CYCK,CPTZ,AKCW,AGiBA,CRlBCoB,AOSEyQ,AFRF5M,EVOAlF,IUPX,CAAkBmF,CVOD,CAAClF,EUPI,CLDvB,AOSO,AFRiBmF,CVOZ,AYCjB,CPT+B5D,ALQF,CAAChC,EUPN,CAAW2F,CVON,CAAZ,EKRZ,ALQgCjF,AUPE,CLDC,AKCAmF,MAAL,CLD9B,CLQY,CAA8B,CAA9B,CAAzB,AUNQL,EVMmD,SaUfyN,IAApB,CHjBQ,CAAlB,AGiBmC,CHjB7C,CGiBoB,EAA6BnM,uBAA7B,CAAxB;AlBSJ,AIDA,AHCA,AEFA,AalBO,ANXI,ALaH,AYCC,AFPJ,AGgBD+J,EAAAA,CRvBA,CMWSS,CCHK,EAMP,GANO,CZKH,AYLP,EDGc,EHKP,CGLW,CXElB,CaUY,CAAC6B,MFZR7B,SAAa,AEYU,CAACvK,EFEhC,AEFe,CAAhB,GAAuCoM,eAAvC;AlBSJ,AIDA,AHCA,AEFA,AaLK,ANnBJ,AGWGlS,ARHC,AYCG,ACSP,CR3BM,AQuBP,CLHIA,IGLAsQ,AHKI,EAAJtQ,IADW,KGSV,uEAba,SAab;AhBQL,AIDA,AHCA,AEFA,AaNK,AHPDqB,AIFC,AFRD,EFUAA,IGLAkP,AHKI,EAAJlP,CEVOgD,ECiBN,IDjBD,mECKQ,EAYP;AhBSL,AIDA,AHCA,AEFA,AaPK,AHTU,ARDX,AUNH,MCKGmM,AXCIlR,SWUH,OXVmB,KAAKC,MAAM,CAACC,IAAP,CAAY,CAACR,QAAD,CAAZ,EAAwBS,SAAxB,CAAkC,CAAlC,CAAzB,EAA+D,qBWDnD,CAWX;AhBUL,AIDA,AHCA,AEFA,AaRK,AXTG,AYCJ,MDFAgR,ACEMa,KZDK,UWSV,AXTG,KYCsB,GAAGlH,MAAM,CAACwF,gBAAP,CAAwB9J,EAAxB,CAA7B,oCDFkB,EAUjB;AhBWL,AIDA,AHCA,AEFA,AaTK,ANlBL,ALUK,AYCDwL,AFRJ,EEQIA,EPXEtQ,AKGA6D,ECMF6L,WASC,ANlBc,GAAG,EOWE,AFRA,CEQCzG,EFRE,ILHrBjJ,EOWF,CAA8ByG,EFR5B5C,QLHgB,CAACxF,SAAD,AOWlB,AFRuB,CEQ4B0E,CPXlB,CKGJ,cEQ7B,CAAoE,OAApE,EAA6E,SDF/D,CASb,ECPiF;AjBmBtF,AIDA,AHCA,AEFA,AaVK,ANjBD,AOWIuN,AFRJ,IEQIA,EDFJX,ADNM7L,GCcL,ANjBM7D,MAAM,CAACC,CKGG,GAAG,IEQI,AFRA6D,CEQC+K,GPXlB,AKGa,CLHOzQ,CKG3B,EEQI,CAA6BuM,KPX1B,CAAP,OOWI,kCDFE,CAQL;AhBaL,AIDA,AHCA,AEFA,AaXK,ANhBJ,ALSG,AYEC,AFRD,CLLJ,EOWI,GDAAgF,AXAItR,GUNGwF,WCaN,ADbiB,CAACE,CVMC,KAAKzF,EUNlB,IVMwB,CAACC,AUNA,GAAzB,CVMkB,CAAY,CAACP,AULhC6F,WAAW,CAACG,KVKmB,CAAZ,EAAiCxF,EULpD,EADC,GAC0B,EVKR,CAA2C,AUN7D,CVMkB,CAAzB,CUJMqF,CVIkE,UUJvD,CAACI,MCID,CAOhB,GDXK,EAFN;Af2BJ,AIDA,AHCA,AEFA,AaZK,AXNG,AYEJoM,AFNH,CALD,CEWIA,IDFAT,KXAW,KWMV,MCJmB,CAAC5G,OZFjB,CYEJ,CAA8BlD,kBAA9B,CAAiDhD,gBAAjD,CAAkE,OAAlE,EAA2E,UDF9D,CAMZ,CCJ+E;AjBmBpF,AIDA,AHCA,AEFA,AabK,AXLA,AYEGuN,IAAAA,EDFJR,cAKC,ICHuB,CAAChB,OAArB,CAA6BhJ,WAA7B,+CDFa,CAKhB;AhBgBL,AIDA,AHCA,AEFA,AadK,ACFA,AFPL,GEKI,CFLE3B,ECKF4L,SAIC,MDTkB,GAAG,SAApB5L,iBAAoB,CAAEC,MAAF,EAA4B,2BCKtC,CAIX;AhBiBL,AIDA,AHCA,AEFA,AafK,AXJD,AYGAkM,AFRkD,EEQlDA,IDFAN,AXDI1R,AUL4B+F,QAAkB,OCSjD,CXJmB,AYGA,CAAC4E,IZHI1K,IYGzB,CAA8BmI,CZHC,CAAClI,IAAP,CAAY,CAACN,UYGtC,CAAiD6E,CZHZ,CAAZ,EAA4BtE,SAA5B,CAAsC,CAAtC,CAAzB,AYGA,CAAkE,CZHC,MYGnE,EAA2E,QFRhC,EAAO,EEQ8B,MDF9D,IAGjB;AhBkBL,AIDA,AHCA,AEFA,AahBK,AXHG,AYGA6R,IAAAA,EDFJL,KXDW,QWGV,KCAuB,CZHpB,AYGqBnB,OAArB,CAA6BP,WAA7B,CAAyC+B,oBAAoB,CAACrH,QAArB,CAA8BtC,kBDF3D,CAEf,ICA4C,CAAsD6F,KAA/F;AjBmBR,AIDA,AHCA,AEFA,AajBK,AXFA,AYGG8D,AFTJ,IESIA,EDFJJ,CDPK,IAAI1M,CAAC,GAAG,CAAb,EAAgBA,CAAC,CCQhB,EDRmBY,EESI,CAAC6E,GFTC,CAAC7F,IESvB,CAA8BuD,CFTlC,EAAmCnD,CAAC,EAApC,EAAwC,eESpC,CAAsDgJ,KAAtD,GAA8D,EAA9D,0BDFa,EAChB;AhBoBL,AIDA,AHCA,AEFA,AajBI,ACCC,AFTG,GEMJ,KFNQ,kBCQS8C,WAAjB,cAAgCC,KAAhC,cAAyCC,SAAzC,cAAsDC,eAAtD,cAAyEC,WAAzE,cAAwFC,GAAxF,cAA+FC,cAA/F,cAAiHC,UAAjH,cAA+HC,cAA/H,cAAiJC,SAAjJ,cAA8JC,eAA9J,cAAiLC,aAAjL,cAAkMC,cAAlM;AhBoBJ,AIDA,AHCA,AEFA,AajBC,AXHG,AYIAI,AFRQ,CCTL,CCiBHA,IZJIhS,IUJQ8F,MAAM,MVIE,AYIA,CAAC6E,IZJI1K,CUJK+F,GEQ9B,CAA8BsC,CZJC,CAACpI,IAAP,AUJjB,CVI6B,CAACL,AUJI,QEQ1C,CAA+C4E,YZJV,CAAZ,EAAqCtE,CYI9D,CAAgE,OZJvC,AYIzB,CZJwE,CAA/C,AYIgD,CZJzE,EAA4E,SYIE;AjBmBlF,AIDA,AHCA,AEFA,AEpBQ,AYIA6R,AFRQjM,IEQRiM,IFRQjM,GVID,KUJS,IAAIjF,IEQA,CAAC0P,GFRO,CAAC1K,GEQ7B,CAA6B0G,CZJ7B,CUJmC,CAACtH,CAAD,CAAN,CAAUzD,QAAV,CEQ7B,AFRgD,CAAnB,CAAD,EAAwB,CAAxB,CAAR,GAAqC,GAAjD;Af2BhB,AIDA,AHCA,AEFA,AEpBK,AYIA,AFRQ,GEMT,IFRQ,MAEO;Af2BnB,AIDA,AHCA,AEFA,AchBIuQ,AFRYjM,EEQZiM,MFRYjM,QAAQ,IAAIjF,EEQJ,CAAC6J,KFRW,CAAC7E,EEQjC,CAA8BwC,GFRS,CAACpD,CAAD,CAAN,CAAUe,SEQ3C,CAA+CxB,AFRd,CAAqB,CAArB,CAAD,CAAR,GAAoC,GAAhD,MEQZ,CAAgE,OAAhE,EAAyE,YAAK;AjBmBlF,AIDA,AHCA,AEFA,AanBO,AXFH,AYKIuN,AFRK,ICKAH,ACGLG,KZLG,IAAP,EWEoB,GAAI,MCGA,CAACxB,EDHhBqB,KCGL,CAA6BrF,KDHT,GAAM,OCG1B;AjBmBR,AIDA,AHCA,AEFA,AanBI,AXFH,AYKI,AFRI,CVtBF,EY4BH,EFbI,CAOE,GCKC,IDLMtG,CAAP,ECKN,ADLgB;Af2BpB,AIDA,AHCA,AEFA,AanBC,ACGG8L,AFRQjM,CCGL,CCKHiM,IFRQjM,QAAQ,IAAID,IEQA,CAAC6E,CFRK,CAACzF,CAAD,CAAlB,IEQR,CAA8BwF,YAA9B,CAA2C,CAA3C,EAA8CjG,gBAA9C,CAA+D,OAA/D,EAAuE,YAAK;AjBmBhF,AIDA,AHCA,AEFA,AchBQuN,AFRC,IEQDA,oBAAoB,CAACxB,OAArB,CAA6B7E,mBAA7B;AjBmBR,AIDA,AHCA,AEFA,AchBK,AFRA,GEMD;AjBqBJ,AIDA,AHCA,AEFA,AchBIqG,EAAAA,oBAAoB,CAACrH,QAArB,CAA8BD,YAA9B,CAA2C,CAA3C,EAA8CjG,gBAA9C,CAA+D,OAA/D,EAAuE,YAAK;AjBmBhF,AIDA,AHCA,AEFA,AatBO,ACMCuN,AFTL,ICGUF,ACMLE,KFTEjM,GCGW,GAAG,EDHN,CAACI,MCGN2L,ACMe,CAACtB,EFTnB,CAAmB,CAAnB,EAAsBzK,CCGR,ACMhB,CDNiB/B,ACMY8H,IDNb,EAAU,ADHM,CAAChH,MAAT,GAAiB,CESzC,AFTE,CAAP;Af4BH,AIDA,AHCA,AEFA,AatBI,ACMC,AFTJ,CAdD,EEqBI,wBDJkBd,IAAI,CAACc,MAAvB;AhByBJ,AIDA,AHCA,AEFA,AatBC,ACMGkN,CDRG,CCQHA,oBAAoB,CAACrH,QAArB,CAA8BD,YAA9B,CAA2C,CAA3C,EAA8CjG,gBAA9C,CAA+D,OAA/D,EAAuE,YAAK;AjBmBhF,AIDA,AHCA,AEFA,AchBQuN,AFVD,IEUCA,AFVK5L,mBAAmB,CEUJ,CAACoK,CFVM,MEU3B,CAA6B3E,EFVxBzF,kBEUL,CFV2B,CAACC,UAAD,EAAaC,iBAAb,EAAgCC,YAAhC,EAAiD;Af6BpF,AIDA,AHCA,AEFA,AchBK,AFVD,GEQA;AjBqBJ,AIDA,AHCA,AEFA,AchBIyL,EAAAA,oBAAoB,CAACrH,QAArB,CAA8BD,YAA9B,CAA2C,CAA3C,EAA8CjG,gBAA9C,CAA+D,OAA/D,EAAuE,YAAK;AjBmBhF,AIDA,AHCA,AEFA,AchBQuN,IAAAA,oBAAoB,CAACxB,OAArB,CAA6BzE,iBAA7B;AjBmBR,AIDA,AHCA,AEFA,AchBK,AFVD,GEQA,GFRMvF,EAAE,GAAG3B,MAAM,CAAC,CAAD,CAAjB;Af6BJ,AIDA,AHCA,AEFA,AchBImN,AFVA,EEUAA,IFVMvL,aAAa,GEUC,AFVEhD,CEUDkH,OFVS,CEU9B,AFV+BjH,CEUDgH,YAA9B,AFVsB,CEUqB,AFVE,CEU7C,EAA8CjG,EFVxB,CAAtB,aEUA,CAA+D,OAA/D,EAAuE,YAAK;AjBmBhF,AIDA,AHCA,AEFA,AchBQuN,AFVJvL,EAAAA,EEUIuL,WFVS,CAACxL,EAAd,GAAmBA,EAAnB,CEUwB,CAACgK,OAArB,CAA6BxE,qBAA7B;AjBmBR,AIDA,AHCA,AEFA,AchBK,AFVDvF,EAAAA,CEQA,YFRa,CAAC9C,SAAd,CAAwBC,GAAxB,CAA4B,uBAA5B;Af6BJ,AIDA,AHCA,AEFA,AchBIoO,AFTAvL,EESAuL,AFTAvL,aAAa,CAAC3C,MESM,CAAC6G,EFTrB,MESA,CAA8BD,YAA9B,CAA2C,CAA3C,EAA8CjG,gBAA9C,CAA+D,OAA/D,EAAuE,YAAK,8EFPpDiC,sBAFxB;Af4BJ,AIDA,AHCA,AEFA,AchBQsL,AFoUJ3L,EAAAA,EEpUI2L,QFoUM,CAACrN,WEpUa,AFoUxB,CEpUyB6L,AFoUF/J,OEpUnB,CAA6BwF,KFoUjC,aEpUI;AjBmBR,AIDA,AHCA,AEFA,AchBK,AFoUDtF,EAAAA,CEtUA,SFsUU,CAAC,YAAK;AfjTpB,AIDA,AHCA,AEFA,AchBIqL,AFoUI,EEpUJA,oBAAoB,CAACrH,QAArB,CAA8BD,YAA9B,CAA2C,CAA3C,EAA8CjG,gBAA9C,CAA+D,OAA/D,EAAuE,YAAK;AjBmBhF,AIDA,AHCA,AEFA,AchBQuN,IAAAA,oBAAoB,CAACxB,OAArB,CAA6BtE,qBAA7B;AjBmBR,AIDA,AHCA,AEFA,AchBK,GAFD;AjBqBJ,AIDA,AHCA,AEFA,AchBI8F,EAAAA,oBAAoB,CAACrH,QAArB,CAA8BD,YAA9B,CAA2C,CAA3C,EAA8CjG,gBAA9C,CAA+D,OAA/D,EAAuE,YAAK;AjBmBhF,AIDA,AHCA,AEFA,AchBQuN,AFoUA,I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AXzVzB,ADDA,AY2WYE,MAAAA,cAAc,EAAdA,cAjBa;AXxVzB,ADDA,AY2WYC,MAAAA,cAAc,EAAdA,cAlBa;AXvVzB,ADDA,AY2WYC,MAAAA,kBAAkB,EAAlBA,kBAnBa;AXtVzB,ADDA,AY2WYC,MAAAA,eAAe,EAAfA,eApBa;AXrVzB,ADDA,AY2WYC,MAAAA,kBAAkB,EAAlBA,kBArBa;AXpVzB,ADDA,AY2WYG,MAAAA,UAAU,EAAVA;AXzWZ,ADDA,AY4WQ;AX1WR,ADDA;ACEA,ADDA;ACEA,ADDA;ACEA,ADDA,AYgVyB,KAAjB;AX9UR,ADDA;ACEA,ADDA,AYyWQ,QAAMhD,WAAW,GAAG,SAAdA,WAAc,GAAM;AXvWlC,ADDA,AYyWYgD,MAAAA,UAAU,CAACzG,MAAX;AXvWZ,ADDA,AYyWY6C,MAAAA,UAAU,CAACgE,KAAX;AXvWZ,ADDA,AYyWS,KAHD;AXpWR,ADDA,AYyWQ;AXvWR,ADDA;ACEA,ADDA;ACEA,ADDA,AYyWQ;AXvWR,ADDA;ACEA,ADDA;ACEA,ADDA,AYuWQ,QAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AXrWhC,ADDA,AYuWYzD,MAAAA,MAAM,GAAG0D,MAAM,CAACC,aAAP,GAAuB,CAAhC;AXrWZ,ADDA,AYuWYD,MAAAA,MAAM,CAACC,aAAP,GAAuB3D,MAAvB;AXrWZ,ADDA,AYuWYoD,MAAAA,UAAU,CAACtG,KAAX,CAAiBkD,MAAjB,GAA0BA,MAA1B;AXrWZ,ADDA,AYuWS,KAJD;AXjWR,ADDA;ACEA,ADDA,AYsWQ,QAAI4D,iBAAiB,GAAG,KAAxB;AXpWR,ADDA,AYsWQpD,IAAAA,OAAO,CAACnD,gBAAR,CAAyB,WAAzB,EAAsC,YAAM;AXpWpD,ADDA,AYsWYuG,MAAAA,iBAAiB,GAAG,IAApB;AXpWZ,ADDA,AYsWYH,MAAAA,SAAS;AXpWrB,ADDA,AYsWS,KAHD,EAGG,KAHH;AXjWR,ADDA,AYsWQL,IAAAA,UAAU,CAAC/F,gBAAX,CAA4B,WAA5B,EAAyC,YAAM;AXpWvD,ADDA,AYsWYoG,MAAAA,SAAS;AXpWrB,ADDA,AYsWS,KAFD,EAEG,KAFH;AXlWR,ADDA,AYsWQpH,IA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":"js.00a46daa.js","sourceRoot":"..\\browser","sourcesContent":["'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nvar K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    var arr = new Uint8Array(1)\n    var proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  var buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  var valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  var b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(\n      value[Symbol.toPrimitive]('string'), encodingOrOffset, length\n    )\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  var length = byteLength(string, encoding) | 0\n  var buf = createBuffer(length)\n\n  var actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  var buf = createBuffer(length)\n  for (var i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    var copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  var buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    var buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        Buffer.from(buf).copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  var len = string.length\n  var mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  var strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (var i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    var len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nvar hexSliceLookupTable = (function () {\n  var alphabet = '0123456789abcdef'\n  var table = new Array(256)\n  for (var i = 0; i < 16; ++i) {\n    var i16 = i * 16\n    for (var j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n","export const RREQ = 1;\r\nexport const RREP = 2;\r\nexport const RERR = 3;\r\nexport const RREP_ACK = 4;\r\nexport const SEND_TEXT_REQUEST = 5;\r\nexport const SEND_HOP_ACK = 6;\r\nexport const SEND_TEXT_REQUEST_ACK = 7;\r\n\r\n/**\r\n *\r\n * @var Buffer byteArray\r\n * @param byteArray\r\n */\r\nexport const getType = (byteArray ) => {\r\n    const currentBufferInt = Buffer.from(byteArray).readUInt8(0);\r\n    /** @type Buffer**/\r\n    if (currentBufferInt === Buffer.from([RREQ]).readUInt8(0)) {\r\n        return 'RREQ';\r\n    }\r\n    if (currentBufferInt === Buffer.from([RREP]).readUInt8(0)) {\r\n        return 'RREP';\r\n    }\r\n    if (currentBufferInt === Buffer.from([RERR]).readUInt8(0)) {\r\n        return 'RERR';\r\n    }\r\n    if (currentBufferInt === Buffer.from([RREP_ACK]).readUInt8(0)) {\r\n        return 'RREP_ACK';\r\n    }\r\n    if (currentBufferInt === Buffer.from([SEND_TEXT_REQUEST]).readUInt8(0)) {\r\n        return 'SEND_TEXT_REQUEST';\r\n    }\r\n    if (currentBufferInt === Buffer.from([SEND_HOP_ACK]).readUInt8(0)) {\r\n        return 'SEND_HOP_ACK';\r\n    }\r\n    if (currentBufferInt === Buffer.from([SEND_TEXT_REQUEST_ACK]).readUInt8(0)) {\r\n        return 'SEND_TEXT_REQUEST_ACK';\r\n    }\r\n    return null;\r\n}\r\n\r\n","import {RREP} from \"./types\";\r\n\r\nexport const create = (hopCount=0, originAddress, destinationAddress, destinationSequenceNumber, lifetime) => {\r\n    return Buffer.from([RREP, hopCount, originAddress, destinationAddress, destinationSequenceNumber, lifetime]);\r\n}\r\nexport const read = (byteArray) => {\r\n    return {\r\n        hopCount: byteArray[0],\r\n        originAddress: byteArray[1],\r\n        destinationAddress: byteArray[2],\r\n        destinationSequenceNumber: byteArray[3],\r\n        lifetime: byteArray[4],\r\n    }\r\n}\r\n","import {RREQ} from \"./types\";\r\n\r\nexport const create = (\r\n    uflag,\r\n    hopCount,\r\n    rreq_id,\r\n    originAddress,\r\n    originSequenceNumber,\r\n    destinationAddress,\r\n    destinationSequenceNumber\r\n) => {\r\n    return Buffer.from([\r\n        RREQ,\r\n        (uflag) ? uflag : 1,\r\n        hopCount,\r\n        rreq_id,\r\n        originAddress,\r\n        originSequenceNumber,\r\n        destinationAddress,\r\n        destinationSequenceNumber,\r\n    ]);\r\n}\r\nexport const read = (byteArray) => {\r\n    return {\r\n        uflag: byteArray[0],\r\n        hopCount: byteArray[1],\r\n        rreq_id: byteArray[2],\r\n        originAddress: parseInt(byteArray[3]),\r\n        originSequenceNumber: byteArray[4],\r\n        destinationAddress: parseInt(byteArray[5]),\r\n        destinationSequenceNumber: byteArray[6],\r\n    }\r\n}\r\n","import {RERR} from \"./types\";\r\n\r\nexport const create = ( destinationCount, unreachableDestinationAddress, unreachableDestinationSequenceNumber, additionalAddresses, additionalSequenceNumber) => {\r\n    return Buffer.from([RERR, destinationCount, unreachableDestinationAddress, unreachableDestinationSequenceNumber, additionalAddresses, additionalSequenceNumber]);\r\n}\r\n\r\nexport function read(byteArray) {\r\n    return {\r\n        destinationCount: byteArray[0],\r\n        unreachableDestinationAddress: byteArray[1],\r\n        unreachableDestinationSequenceNumber: byteArray[2],\r\n        additionalAddresses: byteArray[3],\r\n        additionalSequenceNumber: byteArray[4],\r\n    }\r\n}\r\n","import {RREP_ACK} from \"./types\";\r\n\r\nexport const create = () => {\r\n    return Buffer.from([RREP_ACK]);\r\n}\r\nexport const read = () => {\r\n    return true;\r\n}\r\n","\r\nimport {SEND_TEXT_REQUEST} from \"./types\";\r\n\r\nexport const create = (originAddress, destinationAddress, messageSequenceNumber, payload) => {\r\n    const bytesPayload = Buffer.from(payload);\r\n    return Buffer.concat([Buffer.from([SEND_TEXT_REQUEST, parseInt(originAddress), parseInt(destinationAddress), messageSequenceNumber]), bytesPayload]);\r\n}\r\nexport const read = (byteArray) => {\r\n    const [ originAddress, destinationAddress, messageSequenceNumber, ...bytesPayload] = byteArray;\r\n\r\n    return {\r\n        originAddress,\r\n        destinationAddress,\r\n        messageSequenceNumber,\r\n        message: Buffer.from(bytesPayload).toString('ascii'),\r\n    }\r\n}\r\nconst converToAscii = (byteArray) => {\r\n    return String.fromCharCode(byteArray);\r\n}\r\n\r\n","\r\nimport {SEND_HOP_ACK} from \"./types\";\r\n\r\nexport const create = (messageSequenceNumber) => {\r\n    return Buffer.from([SEND_HOP_ACK, messageSequenceNumber]);\r\n}\r\nexport const read = (bytearray) => {\r\n    return {\r\n        messageSequenceNumber: bytearray[0],\r\n    };\r\n}\r\n","\r\nimport {SEND_TEXT_REQUEST_ACK} from \"./types\";\r\n\r\nexport const create = ( originAddress, destinationAddress, messageNumber) => {\r\n    return Buffer.from([SEND_TEXT_REQUEST_ACK, originAddress, destinationAddress, messageNumber]);\r\n}\r\nexport const read = (byteArray) => {\r\n    const [ originAddress, destinationAddress, messageNumber] = byteArray;\r\n    return {\r\n        originAddress, destinationAddress, messageNumber\r\n    }\r\n}\r\n","import {create as createRREP, read as readRREP} from \"./RREP\";\r\nimport {create as createRREQ, read as readRREQ} from \"./RREQ\";\r\nimport {create as createRERR, read as readRERR} from \"./RERR\";\r\nimport {create as createRREP_ACK, read as readRREP_ACK} from \"./RREP-ACK\";\r\nimport {create as createSEND_TEXT_REQUEST, read as readSEND_TEXT_REQUEST} from \"./SEND-TEXT-REQUEST\";\r\nimport {create as createSEND_HOP_ACK, read as readSEND_HOP_ACK} from \"./SEND-HOP-ACK\";\r\nimport {create as createSEND_TEXT_REQUEST_ACK, read as readSEND_TEXT_REQUEST_ACK} from \"./SEND-TEXT-REQUEST-ACK\";\r\n\r\nexport const send = {\r\n    rrep_ack: createRREP_ACK,\r\n    rerr: createRERR,\r\n    rreq: createRREQ,\r\n    rrep: createRREP,\r\n    send_hop_ack: createSEND_HOP_ACK,\r\n    send_text_request: createSEND_TEXT_REQUEST,\r\n    send_text_request_ack: createSEND_TEXT_REQUEST_ACK\r\n}\r\nexport const read = {\r\n    rrep_ack: readRREP_ACK,\r\n    rerr: readRERR,\r\n    rreq: readRREQ,\r\n    rrep: readRREP,\r\n    send_hop_ack: readSEND_HOP_ACK,\r\n    send_text_request: readSEND_TEXT_REQUEST,\r\n    send_text_request_ack: readSEND_TEXT_REQUEST_ACK\r\n}\r\nexport default {\r\n    read,\r\n    send,\r\n}\r\n","\r\nexport const showError = (errorMessage) => {\r\n    debugger;\r\n    let isModalShown = false;\r\n    const modal = document.createElement('div');\r\n    modal.classList.add('error-modal-wrapper');\r\n    const closeError = () => {\r\n        modal.innerHTML = '';\r\n        modal.remove();\r\n    }\r\n    const showError = (errorMessage) => {\r\n        modal.innerHTML= '';\r\n        const text = document.createElement('div');\r\n        const closeButton = document.createElement('div');\r\n        closeButton.style.position = 'fixed';\r\n        closeButton.style.top = '0';\r\n        closeButton.style.right = '0';\r\n        closeButton.style.margin = '50px';\r\n        closeButton.style.fontSize = '25px';\r\n        closeButton.style.borderBottom = '1px solid lightgray';\r\n        closeButton.innerHTML = 'Ok, verstanden - close';\r\n        closeButton.addEventListener('click', () => {\r\n            closeError();\r\n        });\r\n        text.innerText = errorMessage;\r\n        modal.appendChild(closeButton);\r\n        modal.appendChild(text);\r\n        document.body.appendChild(modal);\r\n    }\r\n    showError(errorMessage);\r\n}\r\n","import terminalIcon from '../img/terminal_icon.png';\r\n\r\nimport {getType} from \"./../../src/client/packages/types\";\r\nimport packages from \"../../src/client/packages\";\r\nimport {showError} from \"./errorModal\";\r\n\r\n/**\r\n * @var renderInto HTMLElement\r\n * @param renderInto\r\n **/\r\nfunction makeid(length) {\r\n    var result           = '';\r\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\r\n    var charactersLength = characters.length;\r\n    for ( var i = 0; i < length; i++ ) {\r\n        result += characters.charAt(Math.floor(Math.random() *\r\n            charactersLength));\r\n    }\r\n    return result;\r\n}\r\nconst formattedTimestamp = () => {\r\n    const currentdate = new Date();\r\n    return currentdate.getHours() + \":\"\r\n        + currentdate.getMinutes() + \":\"\r\n        + currentdate.getSeconds();\r\n}\r\nconst formatBinaryInput = ( sended, showText = '' )=> {\r\n    for (let i = 0; i < sended.length; i++) {\r\n        try {\r\n\r\n            if (sended instanceof Uint8Array) {\r\n                showText += parseInt(sended[i].toString(2), 2) + '-';\r\n            } else {\r\n                showText += parseInt(sended[i].charCodeAt(0)) + '-';\r\n            }\r\n        } catch (e) {\r\n            showText += sended[i];\r\n        }\r\n    }\r\n   return showText.substring(0, showText.length -1 ) ;\r\n}\r\nexport const createSerialConsole = (renderInto, connectToDeviceId, attachEvents) => {\r\n    /**\r\n     * first create container\r\n     **/\r\n    const id = makeid(5);\r\n    const serialConsole = document.createElement('div');\r\n    serialConsole.id = id;\r\n    serialConsole.classList.add('serial-console-window');\r\n\r\n    serialConsole.innerHTML = `\r\n            <div style=\"width:100%\"> <div data-id=\"header\" class=\"serial-console-header\">\r\n                <img src=\"${terminalIcon}\" width=\"32\" height=\"32\" /> <span class=\"serial-console-header-text\">Serial Console -  <span data-id=\"device-id\">...</span></span>\r\n                 <span data-id=\"readonly-label\" class=\"readonly-label hidden\">readonly <a class=\"full-log-toggle\"  href=\"javascript:false\" data-id=\"full-log-toggle\"> (active full log)</a></span>\r\n                 <span data-id=\"window-close-button\" class=\"serial-console-close-button\">❌</span>\r\n            </div></div>\r\n            <div class=\"serial-console-wrapper\">\r\n            <div data-id=\"serial-console-container\" class=\"serial-console-container serial-console-container--active\">\r\n\r\n            <div data-id=\"status-bar\">\r\n                <div> Ist im Wlan: <span data-id=\"is-lan\">...</span></div>\r\n                <div> Blacklist: <span class=\"blacklist-container\" data-id=\"blacklist\">...</span></div>\r\n            </div>\r\n            <div data-id=\"log-container\" class=\"serial-console-log-container\">\r\n                <div class=\"log-title\">Log</div>\r\n                <hr>\r\n                <div data-id=\"log\"></div>\r\n            </div>\r\n            <div data-id=\"footer\" class=\"serial-console-footer\">\r\n                <div data-id=\"send-text-serial\">\r\n                    <div>Serial Text Input</div>\r\n                    <input data-id=\"send-text-serial-button-input\" type=\"text\" />\r\n                    <button data-id=\"send-text-serial-button\">senden</button>\r\n                </div>\r\n                 <div data-id=\"show-packages-container\">\r\n                    <button><label><input data-id=\"follow-log-toggle\" type=\"checkbox\"> follow log </label></button>\r\n                </div>\r\n\r\n            </div>\r\n            <div data-id=\"expanded-modal\" class=\"modal-container\">\r\n                <div data-id=\"expanded-modal-menu\">\r\n                    <button class=\"expaneded-modal-menu-item\" data-id=\"show-new-route-request\">Route Request</button>\r\n                    <button class=\"expaneded-modal-menu-item\" data-id=\"show-new-route-reply\">Route Reply</button>\r\n                    <button class=\"expaneded-modal-menu-item\" data-id=\"show-new-route-reply-ack\">Route Reply Acknowledge</button>\r\n                    <button class=\"expaneded-modal-menu-item\" data-id=\"show-new-route-error\">Route Error</button>\r\n                    <button class=\"expaneded-modal-menu-item\" data-id=\"show-new-send-hop-acknowledge\">Send Hop Acknowledge</button>\r\n                    <button class=\"expaneded-modal-menu-item\" data-id=\"show-new-send-text-request\">Send Text Request</button>\r\n                    <button class=\"expaneded-modal-menu-item\" data-id=\"show-new-send-text-request-acknowledge\">Send Text Request Acknowledge</button>\r\n                    <button class=\"expaneded-modal-menu-item\" data-id=\"show-manage-receiving\">Manage Receiving</button>\r\n                    <button class=\"expaneded-modal-menu-item\" data-id=\"show-lora-config\">Lora Config</button>\r\n                </div>\r\n                <hr>\r\n                <div data-id=\"expanded-modal-body\">\r\n                    <div class=\"expaneded-modal-new-input-container \" data-id=\"expaneded-modal-new-route-request\">\r\n                        <div>Route Request</div>\r\n                        <div><span>uflag</span><span><input type=\"text\" value=\"1\"></span> </div>\r\n                        <div><span>Hop Count</span><span><input type=\"text\" value=\"1\"></span> </div>\r\n                        <div><span>Request Id</span><span><input type=\"text\" value=\"1\"></span> </div>\r\n                        <div><span>Origin Address</span><span><input type=\"number\" min=\"1\" max=\"20\" value=\"1\"></span> </div>\r\n                        <div><span>Origin Sequence Number</span><span><input type=\"text\" value=\"1\"></span> </div>\r\n                        <div><span>Destination Address</span><span><input type=\"number\" min=\"1\" max=\"20\" value=\"1\"></span> </div>\r\n                        <div><span>Destination Sequence Number</span><span><input type=\"number\" min=\"1\" max=\"20\" value=\"1\"></span> </div>\r\n                        <div><button>senden</button> </div>\r\n                    </div>\r\n\r\n                    <div class=\"expaneded-modal-new-input-container hidden\" data-id=\"expaneded-modal-new-route-reply-ack\">\r\n                        <div>Route Reply Acknowledge </div>\r\n                        <div><button>senden</button> </div>\r\n                    </div>\r\n                     <div class=\"expaneded-modal-new-input-container hidden\" data-id=\"expaneded-modal-new-route-reply\">\r\n                        <div>Route Reply</div>\r\n                        <div><span>Hop Count</span><span><input type=\"text\" value=\"1\"></span> </div>\r\n                        <div><span>Origin Address</span><span><input type=\"number\" min=\"1\" max=\"20\" value=\"1\"></span> </div>\r\n                        <div><span>Origin Sequence Number</span><span><input type=\"text\" value=\"1\"></span> </div>\r\n                        <div><span>Destination Address</span><span><input type=\"number\" min=\"1\" max=\"20\" value=\"1\"></span> </div>\r\n                        <div><span>Lifetime</span><span><input type=\"number\" min=\"1\" max=\"20\" value=\"1\"></span> </div>\r\n                        <div><button>senden</button> </div>\r\n                    </div>\r\n                     <div class=\"expaneded-modal-new-input-container hidden\" data-id=\"expaneded-modal-new-route-error\">\r\n                        <div>Route Error</div>\r\n                        <div><span>Destination Count</span><span><input type=\"text\" value=\"1\"></span> </div>\r\n                        <div><span>Unreachable Destination Address</span><span><input type=\"number\" min=\"1\" max=\"20\" value=\"1\"></span> </div>\r\n                        <div><span>Unreachable Destination Sequence Number</span><span><input type=\"text\" value=\"1\"></span> </div>\r\n                        <div><span>additionalAddresses</span><span><input type=\"number\" min=\"1\" max=\"20\" value=\"1\"></span> </div>\r\n                        <div><span>additionalSequenceNumber</span><span><input type=\"number\" min=\"1\" max=\"20\" value=\"1\"></span> </div>\r\n                        <div><button>senden</button> </div>\r\n                    </div>\r\n                     <div class=\"expaneded-modal-new-input-container hidden\" data-id=\"expaneded-modal-new-send-hop-acknowledge\">\r\n                        <div>Send Hop Acknowledge</div>\r\n                        <div><span>messageSequenceNumber</span><span><input type=\"text\" value=\"1\"></span> </div>\r\n                        <div><button>senden</button> </div>\r\n                    </div>\r\n                     <div class=\"expaneded-modal-new-input-container hidden\" data-id=\"expaneded-modal-new-send-text-request\">\r\n                        <div>Send Text Request</div>\r\n                        <div><span>Origin Address</span><span><input type=\"number\" min=\"1\" max=\"20\" value=\"1\"></span> </div>\r\n                        <div><span>Destination Address</span><span><input type=\"number\" min=\"1\" max=\"20\" value=\"1\"></span> </div>\r\n                        <div><span>messageSequenceNumber</span><span><input type=\"text\" value=\"1\"></span> </div>\r\n                        <div><span>message</span><span><input type=\"text\" maxlength=\"30\" value=\"payload\"></span> </div>\r\n                        <div><button>senden</button> </div>\r\n                    </div>\r\n                     <div class=\"expaneded-modal-new-input-container hidden\" data-id=\"expaneded-modal-new-send-text-request-acknowledge\">\r\n                        <div>Send Text Request Acknowledge</div>\r\n                        <div><button>senden</button></div>\r\n                    </div>\r\n                     <div class=\"expaneded-modal-new-input-container hidden\" data-id=\"expaneded-modal-manage-receiving\">\r\n                        <div>Lora Receiving Modes</div>\r\n                        <div><button>ENABLE Receiving</button></div>\r\n                        <hr>\r\n                         <div><span>Destination (FFFF = Broadcast)</span><span><input type=\"text\" maxlength=\"30\" value=\"FFFF\"></span> </div>\r\n                        <div><button>Set Destination</button></div>\r\n                        <hr>\r\n                         <div><span>Address (1-20)</span><span><input type=\"text\" maxlength=\"30\" value=\"15\"></span> </div>\r\n                        <div><button>Set Addressf</button></div>\r\n                    </div>\r\n                     <div class=\"expaneded-modal-new-input-container hidden\" data-id=\"expaneded-modal-lora-config\">\r\n                        <div>Lora Config</div>\r\n                         <div>\r\n                             <span>\r\n                                 <a href=\"javascript:false\" \r\n                                 title=\"Die Trägerfrequenz, wenn das Modul arbeitet, in Dezimalzahlen, ausgedrückt in 9 Zeichen (410 MHz bis 470 MHz)\">\r\n                                    Trägerfrequenz\r\n                                </a>\r\n                            </span>\r\n                            <span>\r\n                                <input type=\"text\" value=\"433000000\">\r\n                            </span> \r\n                        </div>\r\n                         <div>\r\n                            <div>\r\n                                <a href=\"javascript:false\" title=\"Sendeleistung, dezimal, ausgedrückt in 2 Zeichen( 5dBm-20dBm)\">\r\n                                    Power\r\n                                </a>\r\n                            </div>\r\n                            <span>\r\n                                <input type=\"text\" value=\"20\">\r\n                            </span>\r\n                         </div>\r\n                         <div>\r\n                            <div>\r\n                                <a href=\"javascript:false\" title=\"Die Bandbreite des belegten Kanals wird übertragen: Je größer die Bandbreite, desto schneller werden die Daten übertragen, desto geringer ist jedoch die Empfindlichkeit. Im Konfigurationsbefehl wird nur der Bandbreitencode verwendet, und die tatsächliche Bandbreite wird nicht verwendet.\">\r\n                                    Modulationsbandbreite\r\n                                </a>\r\n                            </div>\r\n                            <span>\r\n                                <input type=\"text\" value=\"9\" />\r\n                            </span>\r\n                         </div>\r\n                         <div>\r\n                            <div>\r\n                                <a href=\"javascript:false\" title=\"Die Schlüsselparameter der Spread-Spectrum-Kommunikation sind, je größer der SpreadingFaktor ist, desto langsamer werden die Daten gesendet, desto höher ist jedoch die Empfindlichkeit. Im Konfigurationsbefehl wird nur der Code des Spreizfaktors verwendet, und der tatsächliche Spreizfaktor wird nicht angezeigt\">\r\n                                    Spread-Faktor\r\n                                </a>\r\n                            </div>\r\n                            <div>\r\n                                <input type=\"text\" value=\"10\" />\r\n                            </div> \r\n                            </div>\r\n                         <div>\r\n                            <div>\r\n                                <a href=\"javascript:false\" title=\"Für die Schlüsselparameter der Spread-Spectrum-Kommunikation wird im Konfigurationsbefehl nur der Code des Fehlerkorrekturcodes verwendet, und der eigentliche Fehlerkorrekturcode wird nicht angezeigt\">\r\n                                    Fehler beim Korrigieren des Codes\r\n                                </a>\r\n                            </div>\r\n                            <div>\r\n                                <input type=\"text\" value=\"4\" />\r\n                             </div>\r\n                          </div>\r\n                         <div>\r\n                            <span>\r\n                                <a href=\"javascript:false\" title=\"CRC-Prüfung der Benutzerdaten\">\r\n                                    CRC-Prüfung\r\n                                </a>\r\n                            </span>\r\n                            <span>\r\n                                <input type=\"text\" value=\"1\" />\r\n                            </span>\r\n                         </div>\r\n                         <div>\r\n                            <span>\r\n                                <a href=\"javascript:false\" title=\"0 explizit | 1 implizit\">\r\n                                    Implizite Kopfzeile\r\n                                </a>\r\n                            </span>\r\n                            <span>\r\n                                <input type=\"text\" value=\"0\" />\r\n                            </span>\r\n                         </div>\r\n                         <div>\r\n                            <span>\r\n                                <a href=\"javascript:false\" title=\"Empfangsmoduseinstellung (0 kontinuierlich | 1 einmalig)\">\r\n                                    Einzelempfang\r\n                                </a>\r\n                            </span>\r\n                            <span>\r\n                                <input type=\"text\" value=\"0\" />\r\n                             </span>\r\n                         </div>\r\n                         <div>\r\n                            <span>\r\n                                <a href=\"javascript:false\" title=\"0 Wird nicht unterstützt | 1 Unterstützung\">\r\n                                    Frequenzsprungeinstellung\r\n                                </a>\r\n                            </span>\r\n                            <span>\r\n                                <input type=\"text\" value=\"0\" />\r\n                            </span> \r\n                         </div>\r\n                         <div>\r\n                            <span>\r\n                                <a href=\"javascript:false\" title=\"Timeout-Zeit für Datenempfang: Wenn im Einzelempfangsmodus die Datensoftware nicht über diese Zeit hinaus empfangen wurde, meldet das Modul einen Timeout-Fehler und wechselt automatisch in Dezimal-Schreibweise in Millisekunden in den SLEEP-Modus (1-65535)\">\r\n                                    Timeout für den Empfang von Daten\r\n                                </a>\r\n                            </span>\r\n                            <span>\r\n                                <input type=\"text\" value=\"0\" />\r\n                            </span>\r\n                         </div>\r\n                         <div>\r\n                            <span>\r\n                                <a href=\"javascript:false\" title=\"Benutzerdatenlänge, Dezimaldarstellung: Anwendung im impliziten Header-Modus, gibt die Länge der vom Modul gesendeten und empfangenen Daten an (diese Länge = tatsächliche Benutzerdatenlänge + 4). Der Anzeigekopf ist ungültig.(5-255)\">\r\n                                    Benutzerdatenlänge\r\n                                </a>\r\n                            </span>\r\n                            <span>\r\n                                <input type=\"text\" value=\"3000\" />\r\n                            </span>\r\n                         </div>\r\n                         <div>\r\n                            <span>\r\n                                <a href=\"javascript:false\" title=\"Präambellänge, Dezimaldarstellung(4-65535)\">\r\n                                    Benutzerdatenlänge\r\n                                </a>\r\n                            </span>\r\n                            <span>\r\n                                <input type=\"text\" value=\"8\" />\r\n                            </span> \r\n                         </div>\r\n                         <div>\r\n                            <span>\r\n                                <a href=\"javascript:false\" title=\"\">\r\n                                    Länge der Präambel\r\n                                </a>\r\n                            </span>\r\n                            <span>\r\n                                <input type=\"text\" value=\"10\">\r\n                            </span>\r\n                         </div>\r\n                        <div><button>senden</button></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            </div>\r\n            <div class=\"sorted-logs-wrapper\">\r\n                <div data-id=\"expaneded-modal-new-input-container\">\r\n                <div>\r\n                    <div class=\"table-title\">Route Requests</div>\r\n                    <div class=\"table8\" data-id=\"log-route-request\">\r\n                        <div>\r\n                            <span>Time</span>\r\n                            <span>Sender</span>\r\n                            <span>U-Flag</span>\r\n                            <span>Request Id</span>\r\n                            <span>Origin Address</span>\r\n                            <span>Origin SequenceNumber</span>\r\n                            <span>Destination Address</span>\r\n                            <span>Destination Sequence Number</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <div class=\"table-title\">Route Reply</div>\r\n                    <div class=\"table7\" data-id=\"log-route-reply\">\r\n                        <div>\r\n                            <span>Time</span>\r\n                            <span>Sender</span>\r\n                            <span>Hop Count</span>\r\n                            <span>Origin Address</span>\r\n                            <span>Destination Address</span>\r\n                            <span>Destination Sequence Number</span>\r\n                            <span>Lifetime</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <div class=\"table-title\">Route Errors</div>\r\n                    <div class=\"table7\" data-id=\"log-route-error\">\r\n                        <div>\r\n                            <span>Time</span>\r\n                            <span>Sender</span>\r\n                            <span>Destination Count</span>\r\n                            <span>Unreachable Destination Address</span>\r\n                            <span>Unreachable Destination Sequence Number</span>\r\n                            <span>Additional Addresses</span>\r\n                            <span>Additional Sequence Number</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <div class=\"table-title\">Send Text Request</div>\r\n                    <div class=\"table6\" data-id=\"log-send-text-request\">\r\n                        <div>\r\n                            <span>Time</span>\r\n                            <span>Sender</span>\r\n                            <span>Origin Address</span>\r\n                            <span>Destination Address</span>\r\n                            <span>Message Number</span>\r\n                            <span>Message</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <div class=\"table-title\">Route Reply Acknowledge</div>\r\n                    <div class=\"table2\" data-id=\"log-route-reply-ack\">\r\n                        <div>\r\n                            <span>Time</span>\r\n                            <span>Sender</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <div class=\"table-title\">Send Text Request Acknowledge</div>\r\n                    <div class=\"table3\" data-id=\"log-send-text-ack\">\r\n                        <div>\r\n                            <span>Time</span>\r\n                            <span>Sender</span>\r\n                            <span>Origin Address</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                  <div>\r\n                    <div class=\"table-title\">Send Hop Acknowledge</div>\r\n                    <div class=\"table3\" data-id=\"log-send-hop-ack\">\r\n                        <div>\r\n                            <span>Time</span>\r\n                            <span>Sender</span>\r\n                            <span>Message Sequence Number</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n            </div>\r\n</div>\r\n    `;\r\n\r\n    renderInto.appendChild(serialConsole);\r\n    setTimeout(()=> {\r\n        /**\r\n         * Websocket Connection\r\n         * @type {WebSocket}\r\n         */\r\n        const connection = new WebSocket('ws://localhost:8001/'+connectToDeviceId, ['soap', 'xmpp']);\r\n        const log = [];\r\n        let deviceId = undefined;\r\n        let isReadOnly = undefined;\r\n        let blacklist = undefined;\r\n        let lan = undefined;\r\n        let zIndex = 0;\r\n        let shouldFollow = false;\r\n        let isFullLog = false;\r\n        let timeout = setTimeout(()=> {\r\n            closeWindow();\r\n            showError('Could not connect to node.')\r\n        }, 1000);\r\n\r\n\r\n        const $windowCloseButton = document.querySelector(getQuerySelector(id,'window-close-button'));\r\n        const $header = document.querySelector(getQuerySelector(id,'header'));\r\n        const $log = document.querySelector(getQuerySelector(id,'log'));\r\n        const $logContainer = document.querySelector(getQuerySelector(id,'log-container'));\r\n        const $deviceId = document.querySelector(getQuerySelector(id, 'device-id'));\r\n        const $readonlyLabel = document.querySelector(getQuerySelector(id, 'readonly-label'));\r\n        const $blacklist = document.querySelector(getQuerySelector(id ,'blacklist'));\r\n        const $lanContainer = document.querySelector(getQuerySelector(id, 'is-lan'));\r\n        const $fullLogToggleButton = document.querySelector(getQuerySelector(id, 'full-log-toggle'));\r\n        const $sendCommandButton = document.querySelector(getQuerySelector(id,'send-text-serial-button'));\r\n        const $sendCommandButtonInput = document.querySelector(getQuerySelector(id,'send-text-serial-button-input'));\r\n        const $followLogToggle = document.querySelector(getQuerySelector(id,'follow-log-toggle'));\r\n        const $serialConsoleContainer = document.querySelector(getQuerySelector(id,'serial-console-container'));\r\n\r\n        /**\r\n         * Table Log\r\n         */\r\n        const $logRouteRequest =  document.querySelector(getQuerySelector(id,'log-route-request'));\r\n        const $logRouteReply =  document.querySelector(getQuerySelector(id,'log-route-reply'));\r\n        const $logRouteReplyAck =  document.querySelector(getQuerySelector(id,'log-route-reply-ack'));\r\n        const $logRouteError =  document.querySelector(getQuerySelector(id,'log-route-error'));\r\n        const $logSendText =  document.querySelector(getQuerySelector(id,'log-send-text-request'));\r\n        const $logSendTextAck =  document.querySelector(getQuerySelector(id,'log-send-text-ack'));\r\n        const $logSendHopAck =  document.querySelector(getQuerySelector(id,'log-send-hop-ack'));\r\n\r\n        /**\r\n         * Add table entries\r\n         *\r\n         * ALWAYS REMOVE TYPE FROM PAYLOAD\r\n         */\r\n        const addTableEntry = (sender, type, payload, isOwn) => {\r\n\r\n            payload = Buffer.from(payload);\r\n            let payloadObject;\r\n            let row;\r\n            row = document.createElement('div');\r\n            row.classList.add('blink-on-create');\r\n            if (isOwn) {\r\n                row.classList.add('own-log-entry');\r\n            } else {\r\n                row.classList.add('other-log-entry');\r\n            }\r\n            switch (type) {\r\n                case 'RREQ':\r\n                    payloadObject = packages.read.rreq(payload);\r\n\r\n                    row.innerHTML = `\r\n<span>${formattedTimestamp()}</span>\r\n<span>${sender}</span>\r\n<span>${payloadObject.uflag}</span>\r\n<span>${payloadObject.rreq_id}</span>\r\n<span>${payloadObject.originAddress}</span>\r\n<span>${payloadObject.originSequenceNumber}</span>\r\n<span>${payloadObject.destinationAddress}</span>\r\n<span>${payloadObject.destinationSequenceNumber}</span>`;\r\n                    $logRouteRequest.appendChild(row)\r\n                    break;\r\n                case 'RREP':\r\n                    payloadObject = packages.read.rrep(payload);\r\n\r\n                    row.innerHTML = `\r\n<span>${formattedTimestamp()}</span>\r\n<span>${sender}</span>\r\n<span>${payloadObject.hopCount}</span>\r\n<span>${payloadObject.originAddress}</span>\r\n<span>${payloadObject.destinationAddress}</span>\r\n<span>${payloadObject.destinationSequenceNumber}</span>\r\n<span>${payloadObject.lifetime}</span>`;\r\n                    $logRouteReply.appendChild(row)\r\n                    break;\r\n                case 'RERR':\r\n                    payloadObject = packages.read.rerr(payload);\r\n                    row.innerHTML = `\r\n<span>${formattedTimestamp()}</span>\r\n<span>${sender}</span>\r\n<span>${payloadObject.destinationCount}</span>\r\n<span>${payloadObject.unreachableDestinationAddress}</span>\r\n<span>${payloadObject.unreachableDestinationSequenceNumber}</span>\r\n<span>${payloadObject.additionalAddresses}</span>\r\n<span>${payloadObject.additionalSequenceNumber}</span>`;\r\n                    $logRouteError.appendChild(row);\r\n                    break;\r\n                case 'RREP_ACK':\r\n                    payloadObject = packages.read.rrep_ack(payload);\r\n                    row.innerHTML = `\r\n<span>${formattedTimestamp()}</span>\r\n<span>${sender}</span>`;\r\n                    $logRouteReplyAck.appendChild(row)\r\n                    break;\r\n                case 'SEND_TEXT_REQUEST':\r\n                    payloadObject = packages.read.send_text_request(payload);\r\n                    row.innerHTML = `\r\n<span>${formattedTimestamp()}</span>\r\n<span>${sender}</span>\r\n<span>${payloadObject.originAddress}</span>\r\n<span>${payloadObject.destinationAddress}</span>\r\n<span>${payloadObject.messageSequenceNumber}</span>\r\n<span>${payloadObject.message}</span>`;\r\n                    $logSendText.appendChild(row)\r\n                    break;\r\n                case 'SEND_HOP_ACK':\r\n                    payloadObject = packages.read.send_hop_ack(payload);\r\n\r\n                    row.innerHTML = `\r\n<span>${formattedTimestamp()}</span>\r\n<span>${sender}</span>\r\n<span>${payloadObject.messageSequenceNumber}</span>`;\r\n                    $logSendHopAck.appendChild(row)\r\n                    break;\r\n                case 'SEND_TEXT_REQUEST_ACK':\r\n                    payloadObject = packages.read.send_text_request_ack(payload);\r\n\r\n                    row.innerHTML = `\r\n<span>${formattedTimestamp()}</span>\r\n<span>${sender}</span>\r\n<span>${payloadObject.originAddress}</span>`;\r\n                    $logSendTextAck.appendChild(row)\r\n                    break;\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Predefined Packages Show Button\r\n         **/\r\n        const $showNewRouteRequest = document.querySelector(getQuerySelector(id,'show-new-route-request'));\r\n        const $showNewRouteReplyAck = document.querySelector(getQuerySelector(id,'show-new-route-reply-ack'));\r\n        const $showNewRouteReply = document.querySelector(getQuerySelector(id,'show-new-route-reply'));\r\n        const $showNewRouteError = document.querySelector(getQuerySelector(id,'show-new-route-error'));\r\n        const $showNewHopAcknowledge = document.querySelector(getQuerySelector(id,'show-new-send-hop-acknowledge'));\r\n        const $showNewTextRequest = document.querySelector(getQuerySelector(id,'show-new-send-text-request'));\r\n        const $showNewTextRequestAck = document.querySelector(getQuerySelector(id,'show-new-send-text-request-acknowledge'));\r\n\r\n        const $showManageReceiving = document.querySelector(getQuerySelector(id,'show-manage-receiving'));\r\n        const $showLoraConfig = document.querySelector(getQuerySelector(id,'show-lora-config'));\r\n        /**\r\n         * Predefined Packages\r\n         **/\r\n        const $newRouteRequest = document.querySelector(getQuerySelector(id,'expaneded-modal-new-route-request'));\r\n        const $newRouteReplyAck = document.querySelector(getQuerySelector(id,'expaneded-modal-new-route-reply-ack'));\r\n        const $newRouteReply = document.querySelector(getQuerySelector(id,'expaneded-modal-new-route-reply'));\r\n        const $newRouteError = document.querySelector(getQuerySelector(id,'expaneded-modal-new-route-error'));\r\n        const $newHopAcknowledge = document.querySelector(getQuerySelector(id,'expaneded-modal-new-send-hop-acknowledge'));\r\n        const $newTextRequest = document.querySelector(getQuerySelector(id,'expaneded-modal-new-send-text-request'));\r\n        const $newTextRequestAck = document.querySelector(getQuerySelector(id,'expaneded-modal-new-send-text-request-acknowledge'));\r\n\r\n        const $manageReceiving = document.querySelector(getQuerySelector(id,'expaneded-modal-manage-receiving'));\r\n        const $loraConfig = document.querySelector(getQuerySelector(id,'expaneded-modal-lora-config'));\r\n        /**\r\n         * Root Container\r\n         **/\r\n        const $container = document.querySelector('#'+ id);\r\n        const $menu = [\r\n            $newRouteRequest,\r\n            $newRouteReply,\r\n            $newRouteReplyAck,\r\n            $newRouteError,\r\n            $newHopAcknowledge,\r\n            $newTextRequest,\r\n            $newTextRequestAck,\r\n            $manageReceiving,\r\n            $loraConfig,\r\n        ];\r\n        const $menuButtons = [\r\n            $showNewRouteRequest,\r\n            $showNewRouteReply,\r\n            $showNewRouteReplyAck,\r\n            $showNewRouteError,\r\n            $showNewHopAcknowledge,\r\n            $showNewTextRequest,\r\n            $showNewTextRequestAck,\r\n            $showManageReceiving,\r\n            $showLoraConfig,\r\n        ];\r\n\r\n        const elements = {\r\n            $windowCloseButton,\r\n            $header,\r\n            $log,\r\n            $logContainer,\r\n            $deviceId,\r\n            $readonlyLabel,\r\n            $serialConsoleContainer,\r\n            $blacklist,\r\n            $lanContainer,\r\n            $fullLogToggleButton,\r\n            $sendCommandButton,\r\n            $sendCommandButtonInput,\r\n            $followLogToggle,\r\n            $menu,\r\n            $menuButtons,\r\n            $newRouteRequest,\r\n            $newRouteReply,\r\n            $newRouteError,\r\n            $newHopAcknowledge,\r\n            $newTextRequest,\r\n            $newTextRequestAck,\r\n            $container,\r\n        }\r\n        /**\r\n         * close window\r\n         */\r\n        const closeWindow = () => {\r\n            $container.remove();\r\n            connection.close();\r\n        }\r\n        /**\r\n         * create draggable window\r\n         */\r\n        // move to top on move\r\n        const moveToTop = () => {\r\n            zIndex = window.zIndexHandler + 1;\r\n            window.zIndexHandler = zIndex;\r\n            $container.style.zIndex = zIndex;\r\n        }\r\n        let windowFollowMouse = false;\r\n        $header.addEventListener('mousedown', () => {\r\n            windowFollowMouse = true;\r\n            moveToTop();\r\n        }, false);\r\n        $container.addEventListener('mousedown', () => {\r\n            moveToTop();\r\n        }, false);\r\n        document.addEventListener('mouseup', () => {\r\n            windowFollowMouse = false;\r\n        }, false);\r\n        window.addEventListener('mousemove', (event) => {\r\n            if (windowFollowMouse) {\r\n                var deltaX = event.movementX;\r\n                var deltaY = event.movementY;\r\n                var rect = $container.getBoundingClientRect();\r\n                $container.style.left = rect.x + (deltaX*1.6) + 'px';\r\n                $container.style.top  = rect.y + (deltaY*1.6) + 'px';\r\n            }\r\n        }, false);\r\n        const showNewRouteRequest = () => {\r\n            for (let i = 0; i < $menu.length ; i++ ){\r\n                if(!$menu[i].classList.contains('hidden')){\r\n                    $menu[i].classList.add('hidden');\r\n                }\r\n            }\r\n            $newRouteRequest.classList.remove('hidden');\r\n        }\r\n        const showNewRouteReplyAck = () => {\r\n            for (let i = 0; i < $menu.length ; i++ ){\r\n                if(!$menu[i].classList.contains('hidden')){\r\n                    $menu[i].classList.add('hidden');\r\n                }\r\n            }\r\n            $newRouteReplyAck.classList.remove('hidden');\r\n        }\r\n        const showNewRouteReply = () => {\r\n            for (let i = 0; i < $menu.length ; i++ ){\r\n                if(!$menu[i].classList.contains('hidden')){\r\n                    $menu[i].classList.add('hidden');\r\n                }\r\n            }\r\n            $newRouteReply.classList.remove('hidden');\r\n        }\r\n        const showNewRouteError = () => {\r\n            for (let i = 0; i < $menu.length ; i++ ){\r\n                if(!$menu[i].classList.contains('hidden')){\r\n                    $menu[i].classList.add('hidden');\r\n                }\r\n            }\r\n            $newRouteError.classList.remove('hidden');\r\n        }\r\n        const showNewHopAcknowledge = () => {\r\n            for (let i = 0; i < $menu.length ; i++ ){\r\n                if(!$menu[i].classList.contains('hidden')){\r\n                    $menu[i].classList.add('hidden');\r\n                }\r\n            }\r\n            $newHopAcknowledge.classList.remove('hidden');\r\n        }\r\n        const showNewTextRequest = () => {\r\n            for (let i = 0; i < $menu.length ; i++ ){\r\n                if(!$menu[i].classList.contains('hidden')){\r\n                    $menu[i].classList.add('hidden');\r\n                }\r\n            }\r\n            $newTextRequest.classList.remove('hidden');\r\n        }\r\n        const showNewTextRequestAck = () => {\r\n            for (let i = 0; i < $menu.length ; i++ ){\r\n                if(!$menu[i].classList.contains('hidden')){\r\n                    $menu[i].classList.add('hidden');\r\n                }\r\n            }\r\n            $newTextRequestAck.classList.remove('hidden');\r\n        }\r\n        const showManageReciving = () => {\r\n            for (let i = 0; i < $menu.length ; i++ ){\r\n                if(!$menu[i].classList.contains('hidden')){\r\n                    $menu[i].classList.add('hidden');\r\n                }\r\n            }\r\n            $manageReceiving.classList.remove('hidden');\r\n        }\r\n        const showLoraConfig = () => {\r\n            for (let i = 0; i < $menu.length ; i++ ){\r\n                if(!$menu[i].classList.contains('hidden')){\r\n                    $menu[i].classList.add('hidden');\r\n                }\r\n            }\r\n            $loraConfig.classList.remove('hidden');\r\n        }\r\n        let once = false;\r\n        const toggleFullLog = (oneTimeFlag) => {\r\n            if (once && oneTimeFlag === true) {\r\n                return;\r\n            }\r\n            if (!isFullLog) {\r\n                connection.send('@@@UPGRADE@@@');\r\n                $fullLogToggleButton.innerText = '(deactive full log)';\r\n                isFullLog = true;\r\n            } else {\r\n                connection.send('@@@DOWNGRADE@@@');\r\n                $fullLogToggleButton.innerText = '(active full log)';\r\n                isFullLog = false;\r\n            }\r\n            once = true;\r\n        }\r\n        const toggleFollowLog = () => {\r\n            const toggled = $followLogToggle.checked;\r\n            shouldFollow = toggled;\r\n        }\r\n        const setReadOnly = () => {\r\n            /**\r\n             * Upgrade Protocol\r\n             * @type {boolean}\r\n             */\r\n            toggleFullLog(true);\r\n            isReadOnly = true;\r\n            $serialConsoleContainer.classList.add('disabled');\r\n            $header.classList.add('application-menu--disabled');\r\n            $sendCommandButtonInput.classList.add('disabled');\r\n            $sendCommandButtonInput.setAttribute('disabled', 'true');\r\n            $sendCommandButton.classList.add('disabled');\r\n            $sendCommandButton.setAttribute('disabled', 'true');\r\n            $serialConsoleContainer.classList.remove('serial-console-container--active');\r\n            $serialConsoleContainer.classList.add('serial-console-container--disabled');\r\n            $container.classList.remove('enabled');\r\n            $readonlyLabel.classList.remove('hidden');\r\n\r\n            /**\r\n             * disable predefined events\r\n             */\r\n            elements.$menuButtons.forEach((element) => {\r\n                element.setAttribute('disabled', \"true\");\r\n            })\r\n\r\n            for (let i = 0; i < elements.$menu.length; i++) {\r\n                debugger;\r\n                elements.$menu[i].querySelectorAll('input').forEach((element) => {\r\n                    element.setAttribute('disabled', true);\r\n                })\r\n                elements.$menu[i].querySelectorAll('* button').forEach((element) => {\r\n                    element.setAttribute('disabled', true);\r\n                })\r\n            }\r\n        }\r\n        const getReadOnlyStatus = () => {\r\n            return isReadOnly;\r\n        }\r\n        const setReadOnlySendedRequest = (sended) => {\r\n            const newLogEntry = document.createElement('div');\r\n            let showText = 'BINARY PACKAGE:  [';\r\n            if (sended[0] === 'A'  && sended[1] === 'T' ) {\r\n                showText = sended;\r\n            } else if (sended[0] === 'L'  && sended[1] === 'R' )  {\r\n\r\n            } else {\r\n                const type = getType(sended);\r\n                _appendLogFormatted(deviceId, type, sended.slice(1, sended.length), true);\r\n                return ;\r\n            }\r\n            newLogEntry.innerText = showText;\r\n            $log.appendChild(newLogEntry)\r\n            return ;\r\n        }\r\n\r\n        const setBlacklist = (newBlacklist) => {\r\n            $blacklist.innerHTML = '';\r\n            for (let i = 1; i <= 20; i++) {\r\n                const blackListBoxes = document.createElement('div');\r\n                blackListBoxes.classList.add('blacklist-item');\r\n                blackListBoxes.innerText = (i).toString();\r\n                if (newBlacklist.indexOf(i.toString()) === -1) {\r\n                    blackListBoxes.classList.add('green-blacklist-status');\r\n                } else {\r\n                    blackListBoxes.classList.add('red-blacklist-status');\r\n                }\r\n                blackListBoxes.addEventListener('click', (event) => {\r\n                    const blackListId = event.target.innerText;\r\n                    const index = newBlacklist.indexOf(blackListId);\r\n                    if (index === -1) {\r\n                        newBlacklist.push(blackListId);\r\n                    } else {\r\n                        const removedItem = newBlacklist.splice(index, 1);\r\n                    }\r\n                    connection.send('@@@BLACKLIST@@@'+newBlacklist.join(','))\r\n\r\n                    setBlacklist(newBlacklist);\r\n                })\r\n                $blacklist.appendChild(blackListBoxes)\r\n            }\r\n        }\r\n        const getBlacklist = () => {\r\n            return blacklist;\r\n        }\r\n        const setLan = (value) => {\r\n            lan = value;\r\n            if (value === 'true') {\r\n                $lanContainer.innerText = '✓'\r\n                return;\r\n            }\r\n            $lanContainer.innerText = '❌';\r\n        }\r\n        const getLan = () => {\r\n            return lan;\r\n        }\r\n        const setDeviceId = (newDeviceId) => {\r\n            deviceId = newDeviceId;\r\n            $deviceId.innerText = deviceId;\r\n        }\r\n        const getDeviceId = () => {\r\n            return deviceId;\r\n        }\r\n\r\n        const createLogEntryTemplate = (log, type) => {\r\n            const newLogEntry = document.createElement('div');\r\n            newLogEntry.innerText = log;\r\n            newLogEntry.classList.add(type);\r\n\r\n            return newLogEntry;\r\n        }\r\n        const followLogAction = () => {\r\n            if (shouldFollow) {\r\n                $logContainer.scrollTo($logContainer.scrollWidth, $logContainer.scrollHeight);\r\n            }\r\n        }\r\n        const appendLog = (data, type, isOwn = false) => {\r\n            let logentry = createLogEntryTemplate(data, type);\r\n            if (data[0] === 'L' && data[1] === 'R') {\r\n                /* try to parse binary packages*/\r\n                let [LRorAT, sender, size, payloadData] = data.split(',')\r\n                const type = getType(payloadData);\r\n                const payloadDataWithoutType = payloadData.slice(1, payloadData.length);\r\n                if (type == null) {\r\n                    $log.appendChild(logentry);\r\n                    followLogAction();\r\n                    return;\r\n                }\r\n                _appendLogFormatted(sender, type, payloadDataWithoutType, isOwn);\r\n            } else {\r\n                $log.appendChild(logentry);\r\n            }\r\n\r\n            followLogAction();\r\n        }\r\n        const _appendLogFormatted = (sender, type, payloadDataWithoutType, isOwn = false) => {\r\n            let binaryAsJson = null;\r\n            switch (type) {\r\n                case 'RREQ':\r\n                    binaryAsJson = packages.read.rreq(payloadDataWithoutType);\r\n                    break;\r\n                case 'RREP':\r\n                    binaryAsJson = packages.read.rrep(payloadDataWithoutType);\r\n                    break;\r\n                case 'RERR':\r\n                    binaryAsJson = packages.read.rerr(payloadDataWithoutType);\r\n                    break;\r\n                case 'RREP_ACK':\r\n                    binaryAsJson = packages.read.rrep_ack(payloadDataWithoutType);\r\n                    break;\r\n                case 'SEND_TEXT_REQUEST':\r\n                    binaryAsJson = packages.read.send_text_request(payloadDataWithoutType);\r\n                    break;\r\n                case 'SEND_HOP_ACK':\r\n                    binaryAsJson = packages.read.send_hop_ack(payloadDataWithoutType);\r\n                    break;\r\n                case 'SEND_TEXT_REQUEST_ACK':\r\n                    binaryAsJson = packages.read.send_text_request_ack(payloadDataWithoutType);\r\n                    break;\r\n            }\r\n\r\n\r\n            let logentry = createLogEntryTemplate(`[${formattedTimestamp()}][${parseInt(sender).toString().padStart(2,'0')}] (${type})` + JSON.stringify(binaryAsJson), type);\r\n            if (isOwn) {\r\n                logentry.classList.add('own-log-entry');\r\n            } else {\r\n                logentry.classList.add('other-log-entry');\r\n            }\r\n            $log.appendChild(logentry);\r\n            followLogAction();\r\n            /**\r\n             * add to sorted log\r\n             */\r\n\r\n            addTableEntry(sender, type, payloadDataWithoutType, isOwn);\r\n            return logentry;\r\n        }\r\n        const pushToLog = (data) => {\r\n            log.push(data);\r\n            appendLog(data, 'input');\r\n\r\n        }\r\n\r\n        // When the connection is open, send some data to the server\r\n        connection.onopen = function () {\r\n            connection.send('AT+RST\\r\\n')\r\n        };\r\n\r\n        // Log errors\r\n        connection.onerror = function (error) {\r\n            console.log('WebSocket Error ' + error);\r\n        };\r\n\r\n        // Log messages from the server\r\n        connection.onmessage = function (e) {\r\n            clearTimeout(timeout);\r\n            if(e.data.startsWith('[used][readonly][rejected]')) {\r\n                setReadOnly();\r\n                return;\r\n            }\r\n            if(e.data.startsWith('[used][readonly][input]')) {\r\n                setReadOnlySendedRequest(e.data.split('[used][readonly][input]')[1]);\r\n                return;\r\n            }\r\n            if(e.data.startsWith('#start#')) {\r\n                setBlacklist(JSON.parse(e.data.split('#start#')[1].split('#')[0].split(',')));\r\n                setDeviceId(e.data.split('#start#')[1].split('#')[1]);\r\n                setLan(e.data.split('#start#')[1].split('#')[2]);\r\n                return;\r\n            }\r\n            pushToLog(e.data);\r\n        };\r\n        const sendCommand = (command) => {\r\n            appendLog(command, 'output', true); // optimistic update\r\n            connection.send(command + '\\r\\n');\r\n        }\r\n        const sendMessage = (message) => {\r\n            appendLog(`AT+SEND=${message.length}`, 'output', true); // optimistic update\r\n            const type = getType(message);\r\n            const messageWithoutType = message.slice(1,message.length);\r\n            let binaryAsJson = null;\r\n            switch (type) {\r\n                case 'RREQ':\r\n                    binaryAsJson = packages.read.rreq(messageWithoutType);\r\n                    break;\r\n                case 'RREP':\r\n                    binaryAsJson = packages.read.rrep(messageWithoutType);\r\n                    break;\r\n                case 'RERR':\r\n                    binaryAsJson = packages.read.rerr(messageWithoutType);\r\n                    break;\r\n                case 'RREP_ACK':\r\n                    binaryAsJson = packages.read.rrep_ack();\r\n                    break;\r\n                case 'SEND_TEXT_REQUEST':\r\n                    binaryAsJson = packages.read.send_text_request(messageWithoutType);\r\n                    break;\r\n                case 'SEND_HOP_ACK':\r\n                    binaryAsJson = packages.read.send_hop_ack(messageWithoutType);\r\n                    break;\r\n                case 'SEND_TEXT_REQUEST_ACK':\r\n                    binaryAsJson = packages.read.send_text_request_ack(messageWithoutType);\r\n                    break;\r\n            }\r\n\r\n            const formattedLogEntry = createLogEntryTemplate(`[${formattedTimestamp()}][${parseInt(deviceId).toString().padStart(2,'0')}] (${type})` + JSON.stringify(binaryAsJson), type);\r\n\r\n            $log.appendChild(formattedLogEntry);\r\n            followLogAction();\r\n            /**\r\n             * Add to sorted log\r\n             */\r\n            addTableEntry(deviceId, type, messageWithoutType, true);\r\n            connection.send(`AT+SEND=${message.length}\\r\\n`);\r\n            setTimeout(() => {\r\n\r\n                connection.send(message + '\\r\\n');\r\n                },350);\r\n\r\n        }\r\n\r\n        for (let i in window.serialConsoleIds){\r\n            const currentConsole =  window.serialConsoleIds[i];\r\n            if (currentConsole.id === id) {\r\n                currentConsole.elements = elements;\r\n                currentConsole.actions = {};\r\n                currentConsole.actions.closeWindow = closeWindow;\r\n\r\n                currentConsole.actions.showNewRouteRequest = showNewRouteRequest;\r\n                currentConsole.actions.showNewRouteReply = showNewRouteReply;\r\n                currentConsole.actions.showNewRouteReplyAck = showNewRouteReplyAck;\r\n                currentConsole.actions.showNewRouteError = showNewRouteError;\r\n                currentConsole.actions.showNewHopAcknowledge = showNewHopAcknowledge;\r\n                currentConsole.actions.showNewTextRequest = showNewTextRequest;\r\n                currentConsole.actions.showNewTextRequestAck = showNewTextRequestAck;\r\n                currentConsole.actions.showManageReciving = showManageReciving;\r\n                currentConsole.actions.showLoraConfig = showLoraConfig;\r\n\r\n                currentConsole.actions.getReadOnlyStatus = getReadOnlyStatus;\r\n\r\n                currentConsole.actions.getDeviceId = getDeviceId;\r\n                currentConsole.actions.getBlacklist = getBlacklist;\r\n                currentConsole.actions.getLan = getLan;\r\n                currentConsole.actions.sendCommand = sendCommand;\r\n                currentConsole.actions.sendMessage = sendMessage;\r\n                currentConsole.actions.toggleFullLog = toggleFullLog;\r\n                currentConsole.actions.toggleFollowLog = toggleFollowLog;\r\n            }\r\n        }\r\n        moveToTop();\r\n    }, 250);\r\n    setTimeout(\r\n        ()=> {\r\n            attachEvents(id);\r\n        },\r\n        500\r\n    );\r\n\r\n    return {id, connectToDeviceId};\r\n}\r\n","/**\r\n * Lora specific commands\r\n */\r\nexport const resetModule = () => {\r\n   return `AT+RST`;\r\n}\r\nexport const setAddress =  (address) => {\r\n    return `AT+ADDR=${address}`;\r\n}\r\n\r\nexport const setDestination =  (address) => {\r\n    return `AT+DEST=${address}`;\r\n}\r\nexport const setBroadcast =  () => {\r\n    return `AT+DEST=FFFF`;\r\n}\r\n\r\nexport const getStatsFromLastMessage =  () => {\r\n    return `AT+RSSI?`;\r\n}\r\n// current: AT+CFG=433000000,20,9,10,4,1,0,0,0,0,3000,8,10\r\nexport const setConfig =  (\r\n    rfFrequency = 433000000,\r\n    power = 20,\r\n    bandwidth = 9,\r\n    spreadingFactor = 10,\r\n    errorCoding = 4,\r\n    crc = 1,\r\n    implicitHeader = 0,\r\n    rxSingleOn = 0,\r\n    frequencyHopOn = 0,\r\n    hopPeriod = 0,\r\n    rxPacketTimeout = 3000,\r\n    payloadLength = 8,\r\n    preambleLength = 10\r\n) => {\r\n    return `AT+CFG=${rfFrequency},${power},${bandwidth},${spreadingFactor},${errorCoding},${crc},${implicitHeader},${rxSingleOn},${frequencyHopOn},${hopPeriod},${rxPacketTimeout},${payloadLength},${preambleLength}`\r\n}\r\n\r\nexport const getMessages =  () => {\r\n    return 'AT+RX';\r\n}\r\nexport const sendText = (text) => {\r\n    return `AT+SEND=${text.length}`;\r\n}\r\n","import packages from '../../src/client/packages/index';\r\nimport * as commands from '../../src/client/commands/lora';\r\nimport {showError} from \"./errorModal\";\r\n\r\nexport const attachEvents = (id, retryCounter = 0 ) => {\r\n    const $log = document.querySelector(getQuerySelector(id,'log'));\r\n    const $logContainer = document.querySelector(getQuerySelector(id,'log-container'));\r\n    const $deviceId = document.querySelector(getQuerySelector(id, 'device-id'));\r\n    const $readonlyLabel = document.querySelector(getQuerySelector(id, 'readonly-label'));\r\n    const $blacklist = document.querySelector(getQuerySelector(id ,'blacklist'));\r\n    const $lanContainer = document.querySelector(getQuerySelector(id, 'is-lan'));\r\n    const $fullLogToggleButton = document.querySelector(getQuerySelector(id, 'full-log-toggle'));\r\n    const $sendCommandButton = document.querySelector(getQuerySelector(id,'send-text-serial-button'));\r\n    const $sendCommandButtonInput = document.querySelector(getQuerySelector(id,'send-text-serial-button-input'));\r\n    const $followLogToggle = document.querySelector(getQuerySelector(id,'follow-log-toggle'));\r\n    const $container = document.querySelector('#'+ id);\r\n\r\n    if (window.serialConsoleIds[id].actions === undefined){\r\n        setTimeout(()=> {\r\n            if (3 > retryCounter) {\r\n                showError('Could not connect to Node');\r\n                return;\r\n            }\r\n            attachEvents(id, ++retryCounter);\r\n        }, 300);\r\n        return;\r\n    }\r\n    const currentSerialConsole = window.serialConsoleIds[id];\r\n    currentSerialConsole.elements.$fullLogToggleButton.addEventListener('click', ()=> {\r\n        currentSerialConsole.actions.toggleFullLog();\r\n    });\r\n    currentSerialConsole.elements.$windowCloseButton.addEventListener('click', ()=> {\r\n        currentSerialConsole.actions.closeWindow();\r\n    });\r\n    currentSerialConsole.elements.$sendCommandButton.addEventListener('click', ()=> {\r\n        currentSerialConsole.actions.sendCommand(currentSerialConsole.elements.$sendCommandButtonInput.value);\r\n        currentSerialConsole.elements.$sendCommandButtonInput.value = '';\r\n    });\r\n    currentSerialConsole.elements.$followLogToggle.addEventListener('click', ()=> {\r\n        currentSerialConsole.actions.toggleFollowLog();\r\n    });\r\n    currentSerialConsole.elements.$followLogToggle.addEventListener('click', ()=> {\r\n        currentSerialConsole.actions.toggleFollowLog();\r\n    });\r\n    currentSerialConsole.elements.$menuButtons[0].addEventListener('click',()=> {\r\n        currentSerialConsole.actions.showNewRouteRequest();\r\n    })\r\n    currentSerialConsole.elements.$menuButtons[1].addEventListener('click',()=> {\r\n        currentSerialConsole.actions.showNewRouteReply();\r\n    })\r\n    currentSerialConsole.elements.$menuButtons[2].addEventListener('click',()=> {\r\n        currentSerialConsole.actions.showNewRouteReplyAck();\r\n    })\r\n    currentSerialConsole.elements.$menuButtons[3].addEventListener('click',()=> {\r\n        currentSerialConsole.actions.showNewRouteError();\r\n    })\r\n    currentSerialConsole.elements.$menuButtons[4].addEventListener('click',()=> {\r\n        currentSerialConsole.actions.showNewHopAcknowledge();\r\n    })\r\n    currentSerialConsole.elements.$menuButtons[5].addEventListener('click',()=> {\r\n        currentSerialConsole.actions.showNewTextRequest();\r\n    })\r\n    currentSerialConsole.elements.$menuButtons[6].addEventListener('click',()=> {\r\n        currentSerialConsole.actions.showNewTextRequestAck();\r\n    })\r\n    currentSerialConsole.elements.$menuButtons[7].addEventListener('click',()=> {\r\n        currentSerialConsole.actions.showManageReciving();\r\n    })\r\n    currentSerialConsole.elements.$menuButtons[8].addEventListener('click',()=> {\r\n        currentSerialConsole.actions.showLoraConfig();\r\n    })\r\n    /**\r\n     * Send Packages\r\n     */\r\n\r\n    currentSerialConsole.elements.$menu[0].querySelector('button').addEventListener('click',()=> {\r\n        const inputs = currentSerialConsole.elements.$menu[0].querySelectorAll('input');\r\n        const messagePackage = packages.send.rreq(parseInt(inputs[0].value), parseInt(inputs[1].value), parseInt(inputs[2].value), parseInt(inputs[3].value), parseInt(inputs[4].value), parseInt(inputs[5].value), parseInt(inputs[6].value));\r\n        currentSerialConsole.actions.sendMessage(messagePackage);\r\n    })\r\n    currentSerialConsole.elements.$menu[1].querySelector('button').addEventListener('click',()=> {\r\n        const inputs = currentSerialConsole.elements.$menu[1].querySelectorAll('input');\r\n        const messagePackage = packages.send.rrep(parseInt(inputs[0].value), parseInt(inputs[1].value), parseInt(inputs[2].value), parseInt(inputs[3].value), parseInt(inputs[4].value));\r\n        currentSerialConsole.actions.sendMessage(messagePackage);\r\n    })\r\n    currentSerialConsole.elements.$menu[2].querySelector('button').addEventListener('click',()=> {\r\n        const messagePackage = packages.send.rrep_ack();\r\n        currentSerialConsole.actions.sendMessage(messagePackage);\r\n    })\r\n    currentSerialConsole.elements.$menu[3].querySelector('button').addEventListener('click',()=> {\r\n        const inputs = currentSerialConsole.elements.$menu[3].querySelectorAll('input');\r\n        const messagePackage = packages.send.rerr(parseInt(inputs[0].value), parseInt(inputs[1].value), parseInt(inputs[2].value), parseInt(inputs[3].value), parseInt(inputs[4].value));\r\n        currentSerialConsole.actions.sendMessage(messagePackage);\r\n    })\r\n    currentSerialConsole.elements.$menu[4].querySelector('button').addEventListener('click',()=> {\r\n        const inputs = currentSerialConsole.elements.$menu[4].querySelectorAll('input');\r\n        const messagePackage = packages.send.send_hop_ack(parseInt(inputs[0].value));\r\n        currentSerialConsole.actions.sendMessage(messagePackage);\r\n    })\r\n    currentSerialConsole.elements.$menu[5].querySelector('button').addEventListener('click',()=> {\r\n        const inputs = currentSerialConsole.elements.$menu[5].querySelectorAll('input');\r\n        const messagePackage = packages.send.send_text_request(parseInt(inputs[0].value), parseInt(inputs[1].value), parseInt(inputs[2].value), inputs[3].value);\r\n        currentSerialConsole.actions.sendMessage(messagePackage);\r\n    })\r\n    currentSerialConsole.elements.$menu[6].querySelector('button').addEventListener('click',()=> {\r\n        const messagePackage = packages.send.send_text_request_ack();\r\n        currentSerialConsole.actions.sendMessage(messagePackage);\r\n    })\r\n    currentSerialConsole.elements.$menu[7].querySelectorAll('button')[0].addEventListener('click',()=> {\r\n        const messagePackage = commands.getMessages()\r\n        currentSerialConsole.actions.sendCommand(messagePackage);\r\n    })\r\n    currentSerialConsole.elements.$menu[7].querySelectorAll('button')[1].addEventListener('click',()=> {\r\n        const inputs = currentSerialConsole.elements.$menu[7].querySelectorAll('input');\r\n        currentSerialConsole.actions.sendCommand(commands.setDestination(inputs[0].value));\r\n    })\r\n    currentSerialConsole.elements.$menu[7].querySelectorAll('button')[2].addEventListener('click',()=> {\r\n        const inputs = currentSerialConsole.elements.$menu[7].querySelectorAll('input');\r\n        currentSerialConsole.actions.sendCommand(commands.setAddress(inputs[1].value));\r\n    })\r\n    currentSerialConsole.elements.$menu[8].querySelector('button').addEventListener('click',()=> {\r\n        const inputs = currentSerialConsole.elements.$menu[8].querySelectorAll('input');\r\n        const messagePackage = commands.setConfig(\r\n            parseInt(inputs[0].value),\r\n            parseInt(inputs[1].value),\r\n            parseInt(inputs[2].value),\r\n            parseInt(inputs[3].value),\r\n            parseInt(inputs[4].value),\r\n            parseInt(inputs[5].value),\r\n            parseInt(inputs[6].value),\r\n            parseInt(inputs[7].value),\r\n            parseInt(inputs[8].value),\r\n            parseInt(inputs[9].value),\r\n            parseInt(inputs[10].value),\r\n            parseInt(inputs[11].value),\r\n            parseInt(inputs[12].value),\r\n            )\r\n        currentSerialConsole.actions.sendCommand(messagePackage);\r\n    })\r\n\r\n    console.log(window.serialConsoleIds[id].actions.getDeviceId());\r\n}\r\n\r\nconst sendBinaryPackage = ( ) => {\r\n\r\n}\r\n","/**\r\n * Buffer polyfill\r\n */\r\nconst Buffer = require('buffer/').Buffer;\r\nimport {createSerialConsole} from './createSerialConsole';\r\nimport {attachEvents} from './addEvents';\r\n\r\n/**\r\n * Query Selector for unique windows\r\n * @param id\r\n * @param name\r\n * @returns {string}\r\n */\r\nwindow.getQuerySelector = (id, name) => {\r\n    return `#${id} [data-id=\"${name}\"]`\r\n}\r\n/**\r\n * Header Handler\r\n **/\r\nconst $spawnButton = document.getElementById('spawnConsoleButton');\r\nconst $spawnButtonInput = document.getElementById('spawnConsoleButton-input');\r\n$spawnButton.addEventListener('click', () => {\r\n    const main = document.getElementsByTagName('main')[0];\r\n    const serialConsoleId = createSerialConsole(main,$spawnButtonInput.value, attachEvents);\r\n    serialConsoleIds[serialConsoleId.id] = serialConsoleId\r\n})\r\n/**\r\n * Serial Console Handler\r\n */\r\nwindow.serialConsoleIds = {};\r\ndocument.addEventListener(\"DOMContentLoaded\", function(event) {\r\n    const main = document.getElementsByTagName('main')[0];\r\n    const serialConsoleId = createSerialConsole(main,11, attachEvents);\r\n    serialConsoleIds[serialConsoleId.id] = serialConsoleId\r\n});\r\n\r\n"]}